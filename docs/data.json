{
    "project": {
        "name": "ozpwebtop",
        "description": "",
        "version": "0.2.0",
        "url": "https://github.com/ozone-development/ozp-webtop"
    },
    "files": {
        "src/app/addApplicationsModal/addApplications.js": {
            "name": "src/app/addApplicationsModal/addApplications.js",
            "modules": {
                "ozpWebtop.addApplicationsModal": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/appLauncher/appLauncher.js": {
            "name": "src/app/appLauncher/appLauncher.js",
            "modules": {
                "ozpWebtop.appLauncher": 1
            },
            "classes": {
                "appLauncher.AppLauncherCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "appLauncher": 1
            }
        },
        "src/app/appToolbar/appToolbar.js": {
            "name": "src/app/appToolbar/appToolbar.js",
            "modules": {
                "ozpWebtop.appToolbar": 1
            },
            "classes": {
                "appToolbar.ApplicationToolbarCtrl": 1,
                "appToolbar.appToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "appToolbar": 1
            }
        },
        "src/app/dashboardView/button/ozpbutton.js": {
            "name": "src/app/dashboardView/button/ozpbutton.js",
            "modules": {
                "ozpWebtop.dashboardView.button": 1
            },
            "classes": {
                "dashboardView.ozpButton": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/chrome/chrome.js": {
            "name": "src/app/dashboardView/chrome/chrome.js",
            "modules": {
                "ozpWebtop.dashboardView.chrome": 1
            },
            "classes": {
                "dashboardView.ChromeCtrl": 1,
                "dashboardView.ozpChrome": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/desktop/frames/ozpmanagedframe.js": {
            "name": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "modules": {
                "ozpWebtop.dashboardView.desktop.managedFrame": 1
            },
            "classes": {
                "dashboardView.ozpManagedFrame": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/desktop/genericFrames/iframe.js": {
            "name": "src/app/dashboardView/desktop/genericFrames/iframe.js",
            "modules": {
                "ozpWebtop.dashboardView.desktop.iframe": 1
            },
            "classes": {
                "dashboardView.IframeCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/desktop/desktop.js": {
            "name": "src/app/dashboardView/desktop/desktop.js",
            "modules": {
                "ozpWebtop.dashboardView.desktop": 1
            },
            "classes": {
                "dashboardView.DesktopCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/grid/grid.js": {
            "name": "src/app/dashboardView/grid/grid.js",
            "modules": {
                "ozpWebtop.dashboardView.grid": 1
            },
            "classes": {
                "dashboardView.GridCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/models/dashboardApi.js": {
            "name": "src/app/models/dashboardApi.js",
            "modules": {
                "ozpWebtop.models.dashboard": 1
            },
            "classes": {
                "models.dashboardApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "src/app/models/marketplaceApi.js": {
            "name": "src/app/models/marketplaceApi.js",
            "modules": {
                "ozpWebtop.models.marketplace": 1
            },
            "classes": {
                "models.marketplaceApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "src/app/models/userSettingsApi.js": {
            "name": "src/app/models/userSettingsApi.js",
            "modules": {
                "ozpWebtop.models.userSettings": 1
            },
            "classes": {
                "models.userSettingsApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "src/app/ozpToolbar/ozpToolbar.js": {
            "name": "src/app/ozpToolbar/ozpToolbar.js",
            "modules": {
                "ozpWebtop.ozpToolbar": 1
            },
            "classes": {
                "ozpToolbar.OzpToolbarCtrl": 1,
                "ozpToolbar.ozpToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "ozpToolbar": 1
            }
        },
        "src/app/services/dashboardChangeMonitor.js": {
            "name": "src/app/services/dashboardChangeMonitor.js",
            "modules": {
                "ozpWebtop.services.dashboardChangeMonitor": 1
            },
            "classes": {
                "general.dashboardChangeMonitor": 1
            },
            "fors": {},
            "namespaces": {
                "general": 1
            }
        },
        "src/app/services/iwcInterface.js": {
            "name": "src/app/services/iwcInterface.js",
            "modules": {
                "ozpWebtop.services.iwcInterface": 1
            },
            "classes": {
                "services.iwcInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            }
        },
        "src/app/services/localStorageInterface.js": {
            "name": "src/app/services/localStorageInterface.js",
            "modules": {
                "ozpWebtop.services.localStorageInterface": 1
            },
            "classes": {
                "services.localStorageInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            }
        },
        "src/app/userPreferencesModal/userSettings.js": {
            "name": "src/app/userPreferencesModal/userSettings.js",
            "modules": {
                "ozpWebtop.userSettings": 1
            },
            "classes": {
                "userSettings.ModalInstanceCtrl": 1,
                "userSettings.userSettings": 1
            },
            "fors": {},
            "namespaces": {
                "userSettings": 1
            }
        },
        "src/app/app.js": {
            "name": "src/app/app.js",
            "modules": {
                "ozpWebtop": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/constants.js": {
            "name": "src/app/constants.js",
            "modules": {
                "ozpWebtop.constants": 1
            },
            "classes": {
                "constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/ellipticalFilter/elliptical.js": {
            "name": "src/common/ellipticalFilter/elliptical.js",
            "modules": {
                "ozp.common.ellipticalFilter": 1
            },
            "classes": {
                "ozp.common.elliptical": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/iwcConnectedClient/iwcConnectedClient.js": {
            "name": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "modules": {
                "ozp.common.iwc.client": 1
            },
            "classes": {
                "ozp.common.iwc.iwcConnectedClient": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common.iwc": 1
            }
        },
        "src/common/localStorage/localstorage.js": {
            "name": "src/common/localStorage/localstorage.js",
            "modules": {
                "ozp.common.localStorage": 1
            },
            "classes": {
                "ozp.common.LocalStorage": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/urlOriginComparer/compareurl.js": {
            "name": "src/common/urlOriginComparer/compareurl.js",
            "modules": {
                "ozp.common.urlOriginComparer": 1
            },
            "classes": {
                "ozp.common.compareUrl": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/utilities/utilities.js": {
            "name": "src/common/utilities/utilities.js",
            "modules": {
                "ozp.common.utilities": 1
            },
            "classes": {
                "ozp.common.Utilities": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/windowSizeWatcher/windowSizeWatcher.js": {
            "name": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "modules": {
                "ozp.common.windowSizeWatcher": 1
            },
            "classes": {
                "ozp.common.windowSizeWatcher": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        }
    },
    "modules": {
        "ozpWebtop.addApplicationsModal": {
            "name": "ozpWebtop.addApplicationsModal",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 3,
            "description": "Add Applications modal dialog",
            "requires": [
                "ui.bootstrap",
                "ozpWebtop.models.marketplace"
            ]
        },
        "ozpWebtop.appLauncher": {
            "name": "ozpWebtop.appLauncher",
            "submodules": {},
            "classes": {
                "appLauncher.AppLauncherCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "appLauncher": 1
            },
            "tag": "module",
            "file": "src/app/appLauncher/appLauncher.js",
            "line": 14,
            "description": "Launches apps from other sources",
            "requires": [
                "ui.router",
                "ozpWebtop.models.dashboard",
                "ozpWebtop.models.marketplace"
            ]
        },
        "ozpWebtop.appToolbar": {
            "name": "ozpWebtop.appToolbar",
            "submodules": {},
            "classes": {
                "appToolbar.ApplicationToolbarCtrl": 1,
                "appToolbar.appToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "appToolbar": 1
            },
            "tag": "module",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 570,
            "description": "The application toolbar in the Webtop.",
            "requires": [
                "ui.router",
                "ui.bootstrap",
                "ozpWebtop.models.dashboard",
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.models.marketplace",
                "ozpWebtop.models.userSettings",
                "ozpWebtop.addApplicationsModal",
                "ozpWebtop.services.dashboardChangeMonitor",
                "ozp.common.windowSizeWatcher"
            ]
        },
        "ozpWebtop.dashboardView.button": {
            "name": "ozpWebtop.dashboardView.button",
            "submodules": {},
            "classes": {
                "dashboardView.ozpButton": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/button/ozpbutton.js",
            "line": 11,
            "description": "ozpButton module"
        },
        "ozpWebtop.dashboardView.chrome": {
            "name": "ozpWebtop.dashboardView.chrome",
            "submodules": {},
            "classes": {
                "dashboardView.ChromeCtrl": 1,
                "dashboardView.ozpChrome": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 91,
            "description": "ozp Chrome module",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.services.dashboardChangeMonitor",
                "ozpWebtop.models.dashboard"
            ]
        },
        "ozpWebtop.dashboardView.desktop.managedFrame": {
            "name": "ozpWebtop.dashboardView.desktop.managedFrame",
            "submodules": {},
            "classes": {
                "dashboardView.ozpManagedFrame": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "line": 15,
            "description": "Desktop managed frame",
            "requires": [
                "ozp.common.urlOriginComparer",
                "ozpWebtop.models.dashboard",
                "ozpWebtop.dashboardView.desktop.iframe"
            ]
        },
        "ozpWebtop.dashboardView.desktop.iframe": {
            "name": "ozpWebtop.dashboardView.desktop.iframe",
            "submodules": {},
            "classes": {
                "dashboardView.IframeCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/desktop/genericFrames/iframe.js",
            "line": 10,
            "description": "iframe module for dashboard layouts"
        },
        "ozpWebtop.dashboardView.desktop": {
            "name": "ozpWebtop.dashboardView.desktop",
            "submodules": {},
            "classes": {
                "dashboardView.DesktopCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 19,
            "description": "Desktop layout main controller",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.services.dashboardChangeMonitor",
                "ozpWebtop.models.dashboard",
                "ozpWebtop.models.marketplace",
                "ozpWebtop.models.userSettings"
            ]
        },
        "ozpWebtop.dashboardView.grid": {
            "name": "ozpWebtop.dashboardView.grid",
            "submodules": {},
            "classes": {
                "dashboardView.GridCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 21,
            "description": "Grid layout main controller",
            "requires": [
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.constants",
                "ozpWebtop.services.dashboardChangeMonitor",
                "ozpWebtop.models.dashboard",
                "ozpWebtop.models.marketplace",
                "ozpWebtop.models.userSettings"
            ]
        },
        "ozpWebtop.models.dashboard": {
            "name": "ozpWebtop.models.dashboard",
            "submodules": {},
            "classes": {
                "models.dashboardApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            },
            "tag": "module",
            "file": "src/app/models/dashboardApi.js",
            "line": 1179,
            "description": "Dashboard model",
            "requires": [
                "ozp.common.utilities",
                "ozpWebtop.constants",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.localStorageInterface"
            ]
        },
        "ozpWebtop.models.marketplace": {
            "name": "ozpWebtop.models.marketplace",
            "submodules": {},
            "classes": {
                "models.marketplaceApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            },
            "tag": "module",
            "file": "src/app/models/marketplaceApi.js",
            "line": 1368,
            "description": "Marketplace model",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.localStorageInterface"
            ]
        },
        "ozpWebtop.models.userSettings": {
            "name": "ozpWebtop.models.userSettings",
            "submodules": {},
            "classes": {
                "models.userSettingsApi": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            },
            "tag": "module",
            "file": "src/app/models/userSettingsApi.js",
            "line": 121,
            "description": "User Settings model",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.localStorageInterface"
            ]
        },
        "ozpWebtop.ozpToolbar": {
            "name": "ozpWebtop.ozpToolbar",
            "submodules": {},
            "classes": {
                "ozpToolbar.OzpToolbarCtrl": 1,
                "ozpToolbar.ozpToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "ozpToolbar": 1
            },
            "tag": "module",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 127,
            "description": "The ozp toolbar component shown in the Webtop.",
            "requires": [
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.models.userSettings"
            ]
        },
        "ozpWebtop.services.dashboardChangeMonitor": {
            "name": "ozpWebtop.services.dashboardChangeMonitor",
            "submodules": {},
            "classes": {
                "general.dashboardChangeMonitor": 1
            },
            "fors": {},
            "namespaces": {
                "general": 1
            },
            "tag": "module",
            "file": "src/app/services/dashboardChangeMonitor.js",
            "line": 12,
            "description": "Dashboard change monitor",
            "requires": [
                "ozpWebtop.constants"
            ]
        },
        "ozpWebtop.services.iwcInterface": {
            "name": "ozpWebtop.services.iwcInterface",
            "submodules": {},
            "classes": {
                "services.iwcInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            },
            "tag": "module",
            "file": "src/app/services/iwcInterface.js",
            "line": 14,
            "description": "Interface for working with IWC",
            "requires": [
                "ozp.common.iwc.client"
            ]
        },
        "ozpWebtop.services.localStorageInterface": {
            "name": "ozpWebtop.services.localStorageInterface",
            "submodules": {},
            "classes": {
                "services.localStorageInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            },
            "tag": "module",
            "file": "src/app/services/localStorageInterface.js",
            "line": 14,
            "description": "Interface for working with Local Storage",
            "requires": [
                "ozp.common.localStorage"
            ]
        },
        "ozpWebtop.userSettings": {
            "name": "ozpWebtop.userSettings",
            "submodules": {},
            "classes": {
                "userSettings.ModalInstanceCtrl": 1,
                "userSettings.userSettings": 1
            },
            "fors": {},
            "namespaces": {
                "userSettings": 1
            },
            "tag": "module",
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 263,
            "description": "The modal encompassing user settings functionality.",
            "requires": [
                "ozpWebtop.models.dashboard",
                "ozpWebtop.models.userSettings"
            ]
        },
        "ozpWebtop": {
            "name": "ozpWebtop",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 3,
            "description": "Top level module of the Webtop. When declared in an HTML file, it bootstraps\nthe Webtop.",
            "example": [
                " \n    <body ng-app=\"ozpWebtop\"> ... </body>"
            ],
            "requires": [
                "ozp.common.ellipticalFilter",
                "ozp.common.iwc.client",
                "ozp.common.localStorage",
                "ozp.common.urlOriginComparer",
                "ozp.common.utilities",
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.constants",
                "ozpWebtop.services.dashboardChangeMonitor",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.localStorageInterface",
                "ozpWebtop.models.dashboard",
                "ozpWebtop.models.marketplace",
                "ozpWebtop.models.userSettings",
                "ozpWebtop.appLauncher",
                "ozpWebtop.appToolbar",
                "ozpWebtop.ozpToolbar",
                "ozpWebtop.dashboardView.button",
                "ozpWebtop.dashboardView.chrome",
                "ozpWebtop.dashboardView.desktop",
                "ozpWebtop.dashboardView.desktop.managedFrame",
                "ozpWebtop.dashboardView.desktop.iframe",
                "ozpWebtop.dashboardView.grid",
                "ozpWebtop.userSettings",
                "ozpWebtop.addApplicationsModal",
                "ui.router",
                "ui.bootstrap",
                "gridster",
                "ozpIwcClient",
                "ozpClassification"
            ]
        },
        "ozpWebtop.constants": {
            "name": "ozpWebtop.constants",
            "submodules": {},
            "classes": {
                "constants": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/constants.js",
            "line": 10,
            "description": "Constants used throughout the application"
        },
        "ozp.common.ellipticalFilter": {
            "name": "ozp.common.ellipticalFilter",
            "submodules": {},
            "classes": {
                "ozp.common.elliptical": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 11,
            "description": "elliptical filter"
        },
        "ozp.common.iwc.client": {
            "name": "ozp.common.iwc.client",
            "submodules": {},
            "classes": {
                "ozp.common.iwc.iwcConnectedClient": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common.iwc": 1
            },
            "tag": "module",
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 15,
            "description": "IWC client",
            "requires": [
                "ozpIwcClient",
                "ozpWebtop.constants"
            ]
        },
        "ozp.common.localStorage": {
            "name": "ozp.common.localStorage",
            "submodules": {},
            "classes": {
                "ozp.common.LocalStorage": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/localStorage/localstorage.js",
            "line": 10,
            "description": "LocalStorage interface"
        },
        "ozp.common.urlOriginComparer": {
            "name": "ozp.common.urlOriginComparer",
            "submodules": {},
            "classes": {
                "ozp.common.compareUrl": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/urlOriginComparer/compareurl.js",
            "line": 10,
            "description": "compareUrl"
        },
        "ozp.common.utilities": {
            "name": "ozp.common.utilities",
            "submodules": {},
            "classes": {
                "ozp.common.Utilities": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/utilities/utilities.js",
            "line": 10,
            "description": "Various utility functions"
        },
        "ozp.common.windowSizeWatcher": {
            "name": "ozp.common.windowSizeWatcher",
            "submodules": {},
            "classes": {
                "ozp.common.windowSizeWatcher": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 11,
            "description": "Window size watcher",
            "requires": [
                "ozpWebtop.constants"
            ]
        }
    },
    "classes": {
        "appLauncher.AppLauncherCtrl": {
            "name": "appLauncher.AppLauncherCtrl",
            "shortname": "appLauncher.AppLauncherCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.appLauncher",
            "namespace": "appLauncher",
            "file": "src/app/appLauncher/appLauncher.js",
            "line": 14,
            "description": "Launch applications in Webtop via URL\n\nThis is really for demo purposes and will likely be removed\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "$state",
                    "description": "ng $state"
                },
                {
                    "name": "$stateParams",
                    "description": "ng $stateParams"
                },
                {
                    "name": "marketplaceApi",
                    "description": "marketplace data"
                },
                {
                    "name": "dashboardApi",
                    "description": "dashboard data"
                }
            ]
        },
        "appToolbar.ApplicationToolbarCtrl": {
            "name": "appToolbar.ApplicationToolbarCtrl",
            "shortname": "appToolbar.ApplicationToolbarCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 24,
            "description": "Application toolbar on the bottom of Webtop. Contains a menu for adding\nfavorited apps to the dashboard and shows names/icons for all apps\ncurrently on the dashboard. Clicking on the app name/icon buttons in the\ntoolbar results in the application being shown or hidden from the dashboard\nview (in desktop layout)\n\ndashboard selector\nbuttons to switch between grid and desktop layouts\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "$scope service"
                },
                {
                    "name": "$rootScope",
                    "description": "$rootScope service"
                },
                {
                    "name": "$state",
                    "description": "$state service"
                },
                {
                    "name": "$modal",
                    "description": "$modal service from ui.bootstrap"
                },
                {
                    "name": "marketplaceApi",
                    "description": "Application data model"
                },
                {
                    "name": "dashbaordApi",
                    "description": "Dashboard data model"
                },
                {
                    "name": "dashboardChangeMonitor",
                    "description": "Notify when dashboard changes"
                },
                {
                    "name": "userSettingsApi",
                    "description": "User settings data model"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "Notify when window size changes"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "dashboardSwitchedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                },
                {
                    "name": "launchUserPreferencesModalEvent",
                    "description": "event name"
                },
                {
                    "name": "highlightFrameOnGridLayoutEvent",
                    "description": "event name"
                }
            ]
        },
        "appToolbar.appToolbar": {
            "name": "appToolbar.appToolbar",
            "shortname": "appToolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 570,
            "description": "Directive for the application toolbar\n\nngtype: directive",
            "static": 1
        },
        "dashboardView.ozpButton": {
            "name": "dashboardView.ozpButton",
            "shortname": "dashboardView.ozpButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.button",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/button/ozpbutton.js",
            "line": 11,
            "description": "ozpButton Renders button with an icon to the left and text to the right.\n\nngtype: directive",
            "is_constructor": 1
        },
        "dashboardView.ChromeCtrl": {
            "name": "dashboardView.ChromeCtrl",
            "shortname": "dashboardView.ChromeCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 17,
            "description": "ChromeCtrl aids the ozpChrome directive in knowing its location\n(grid or desktop).\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "dashboardApi",
                    "description": "dashboard data"
                },
                {
                    "name": "dashboardChangeMonitor",
                    "description": "notify when active dashboard changes"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                }
            ]
        },
        "dashboardView.ozpChrome": {
            "name": "dashboardView.ozpChrome",
            "shortname": "dashboardView.ozpChrome",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 91,
            "description": "Directive for chrome (bar appearing across the top of each widget)\n\nngtype: directive",
            "static": 1
        },
        "dashboardView.ozpManagedFrame": {
            "name": "dashboardView.ozpManagedFrame",
            "shortname": "dashboardView.ozpManagedFrame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.desktop.managedFrame",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "line": 15,
            "description": "Used to include an html document in the webtop. If the html in question is from a different \norigin than the webtop, then an iframe will be used. If the html is from the same origin as\nthe webtop, a \"frame\" (div) will be used.\n\nngtype: directive",
            "is_constructor": 1,
            "params": [
                {
                    "name": "compareUrl",
                    "description": "the URL comparison service",
                    "type": "Function"
                },
                {
                    "name": "$http",
                    "description": "the Angular HTTP service",
                    "type": "Object"
                },
                {
                    "name": "$compile",
                    "description": "the Angular compile service",
                    "type": "Object"
                },
                {
                    "name": "$document",
                    "description": "the Angular document service",
                    "type": "Object"
                },
                {
                    "name": "dashboardApi",
                    "description": "the API for dashboard information {{#crossLink \"dashboardApi\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ]
        },
        "dashboardView.IframeCtrl": {
            "name": "dashboardView.IframeCtrl",
            "shortname": "dashboardView.IframeCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.desktop.iframe",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/genericFrames/iframe.js",
            "line": 10,
            "description": "IframeCtrl ensures that a widget can be properly displayed in an iframe.\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "An Angular scope"
                },
                {
                    "name": "$sce",
                    "description": "The Angular service for Strict Contextual Escaping - [API Docs](https://docs.angularjs.org/api/ng/service/$sce)"
                }
            ]
        },
        "dashboardView.DesktopCtrl": {
            "name": "dashboardView.DesktopCtrl",
            "shortname": "dashboardView.DesktopCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 19,
            "description": "Controller for managing apps/widgets in desktop layout on a dashboard\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "$location",
                    "description": "ng $location"
                },
                {
                    "name": "$interval",
                    "description": "ng $interval"
                },
                {
                    "name": "dashboardApi",
                    "description": "dashboard data"
                },
                {
                    "name": "marketplaceApi",
                    "description": "marketplace listings data"
                },
                {
                    "name": "dashboardChangeMonitor",
                    "description": "notify when dashboard changes"
                },
                {
                    "name": "userSettingsApi",
                    "description": "user preferences data"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                }
            ]
        },
        "dashboardView.GridCtrl": {
            "name": "dashboardView.GridCtrl",
            "shortname": "dashboardView.GridCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 21,
            "description": "Controller managing the frames in the grid layout\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "an Angular scope",
                    "type": "Object"
                },
                {
                    "name": "$rootScope",
                    "description": "the Angular root scope",
                    "type": "Object"
                },
                {
                    "name": "$location",
                    "description": "the Angular location service",
                    "type": "Object"
                },
                {
                    "name": "$interval",
                    "description": "the Angular interval service",
                    "type": "Object"
                },
                {
                    "name": "$q",
                    "description": "the Angular q service",
                    "type": "Object"
                },
                {
                    "name": "$timeout",
                    "description": "the Angular timeout service",
                    "type": "Object"
                },
                {
                    "name": "dashboardApi",
                    "description": "the API for dashboard information",
                    "type": "Object"
                },
                {
                    "name": "marketplaceApi",
                    "description": "the API for marketplace application\ninformation",
                    "type": "Object"
                },
                {
                    "name": "dashboardChangeMonitor",
                    "description": "the service that monitors dashboard\nchanges",
                    "type": "Object"
                },
                {
                    "name": "userSettingsApi",
                    "description": "the API for user settings",
                    "type": "Object"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "service that notifies on window size\nchanges",
                    "type": "Object"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "windowSizeChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "highlightFrameOnGridLayoutEvent",
                    "description": "event name",
                    "type": "String"
                }
            ]
        },
        "models.dashboardApi": {
            "name": "models.dashboardApi",
            "shortname": "models.dashboardApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.models.dashboard",
            "namespace": "models",
            "file": "src/app/models/dashboardApi.js",
            "line": 1179,
            "description": "Angular service which provides an abstraction of the implementations used to\nstore and retrieve dashboard information.\n\nngtype: factory",
            "static": 1
        },
        "models.marketplaceApi": {
            "name": "models.marketplaceApi",
            "shortname": "models.marketplaceApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.models.marketplace",
            "namespace": "models",
            "file": "src/app/models/marketplaceApi.js",
            "line": 1368,
            "description": "Service used to store and retrieve marketplace data (app listings)\n\nMay be configured with different persistence mechanisms including IWC\nand Local Storage\n\nngtype: factory",
            "static": 1
        },
        "models.userSettingsApi": {
            "name": "models.userSettingsApi",
            "shortname": "models.userSettingsApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.models.userSettings",
            "namespace": "models",
            "file": "src/app/models/userSettingsApi.js",
            "line": 121,
            "description": "Service used to store and retrieve user settings\n\nMay be configured with different persistence mechanisms including IWC\nand Local Storage\n\nngtype: factory",
            "static": 1
        },
        "ozpToolbar.OzpToolbarCtrl": {
            "name": "ozpToolbar.OzpToolbarCtrl",
            "shortname": "ozpToolbar.OzpToolbarCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 14,
            "description": "Controller for ozp toolbar located at the top of Webtop\n\nIncludes:\n- menu with links to other OZP resources\n- notifications (TODO)\n- username button with dropdown to access user preferences, help, and logout\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "userSettingsApi",
                    "description": "user preferences data"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "notify when window size changes"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                }
            ]
        },
        "ozpToolbar.ozpToolbar": {
            "name": "ozpToolbar.ozpToolbar",
            "shortname": "ozpToolbar.ozpToolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 127,
            "description": "Directive for the ozp toolbar\n\nngtype: directive",
            "static": 1
        },
        "general.dashboardChangeMonitor": {
            "name": "general.dashboardChangeMonitor",
            "shortname": "general.dashboardChangeMonitor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.services.dashboardChangeMonitor",
            "namespace": "general",
            "file": "src/app/services/dashboardChangeMonitor.js",
            "line": 12,
            "description": "Broadcast messages down $rootScope when the current dashboard or dashboard\nlayout changes\n\nEvent name: **dashboardSwitched**\n\nEvent data:\n\n    {\"layout\": \"grid | desktop\", \"dashboardId\": \"someDashboardId\"}\n\nngtype: factory",
            "static": 1
        },
        "services.iwcInterface": {
            "name": "services.iwcInterface",
            "shortname": "services.iwcInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services",
            "file": "src/app/services/iwcInterface.js",
            "line": 14,
            "description": "Interface for working with IWC\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$q",
                    "description": "ng $q service"
                },
                {
                    "name": "iwcConnectedClient",
                    "description": "IWC client service"
                }
            ]
        },
        "services.localStorageInterface": {
            "name": "services.localStorageInterface",
            "shortname": "services.localStorageInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services",
            "file": "src/app/services/localStorageInterface.js",
            "line": 14,
            "description": "Interface for working with Local Storage\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$q",
                    "description": "ng $q service"
                },
                {
                    "name": "LocalStorage",
                    "description": "LocalStorage service"
                }
            ]
        },
        "userSettings.ModalInstanceCtrl": {
            "name": "userSettings.ModalInstanceCtrl",
            "shortname": "userSettings.ModalInstanceCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings",
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 15,
            "description": "Controller for User Settings modal dialog\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "Scope used by controller"
                },
                {
                    "name": "$modalInstance",
                    "description": "Service from ui.bootstrap"
                },
                {
                    "name": "currentDashboardId",
                    "description": "Id of dashboard to use"
                },
                {
                    "name": "dashboardApi",
                    "description": "Dashboard API"
                },
                {
                    "name": "userSettingsApi",
                    "description": "User Settings API"
                },
                {
                    "name": "userPreferencesUpdatedEvent",
                    "description": "event name"
                }
            ]
        },
        "userSettings.userSettings": {
            "name": "userSettings.userSettings",
            "shortname": "userSettings.userSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings",
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 263,
            "description": "ng Directive for User Settings modal dialog\n\nUsage:\n\n    <user-settings></user-settings>\n\nngtype: directive",
            "static": 1
        },
        "constants": {
            "name": "constants",
            "shortname": "constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.constants",
            "namespace": "",
            "file": "src/app/constants.js",
            "line": 10,
            "description": "Constants used throughout the application\n\nngtype: constant",
            "static": 1
        },
        "ozp.common.elliptical": {
            "name": "ozp.common.elliptical",
            "shortname": "ozp.common.elliptical",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.ellipticalFilter",
            "namespace": "ozp.common",
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 11,
            "description": "elliptical filter\n\nngtype: filter",
            "static": 1
        },
        "ozp.common.iwc.iwcConnectedClient": {
            "name": "ozp.common.iwc.iwcConnectedClient",
            "shortname": "ozp.common.iwc.iwcConnectedClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.iwc.client",
            "namespace": "ozp.common.iwc",
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 15,
            "description": "Provides a single connected IWC client",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$q",
                    "description": "ng $q service"
                },
                {
                    "name": "iwcClient",
                    "description": "iwcClient service from ozp-iwc-angular library"
                },
                {
                    "name": "iwcOzoneBus",
                    "description": "OZONE bus to connect to"
                }
            ]
        },
        "ozp.common.LocalStorage": {
            "name": "ozp.common.LocalStorage",
            "shortname": "ozp.common.LocalStorage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common",
            "file": "src/common/localStorage/localstorage.js",
            "line": 10,
            "description": "Provides a simpler interface to the browser's Local Storage\n\nTaken from http://www.bennadel.com/blog/2105-exploring-html5-s-localstorage-persistent-client-side-key-value-pairs.htm\nSimple interface to localStorage\n\nThe localStorage option has some limitations both in the\nway that it treats values and in the way that it checks\nfor existence. As such, this Cache object will provide\na better proxy.\n\nngtype: factory",
            "is_constructor": 1
        },
        "ozp.common.compareUrl": {
            "name": "ozp.common.compareUrl",
            "shortname": "ozp.common.compareUrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.urlOriginComparer",
            "namespace": "ozp.common",
            "file": "src/common/urlOriginComparer/compareurl.js",
            "line": 10,
            "description": "compareUrl\n\nngtype: factory",
            "static": 1
        },
        "ozp.common.Utilities": {
            "name": "ozp.common.Utilities",
            "shortname": "ozp.common.Utilities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.utilities",
            "namespace": "ozp.common",
            "file": "src/common/utilities/utilities.js",
            "line": 10,
            "description": "Various utility functions\n\nngtype: factory",
            "is_constructor": 1
        },
        "ozp.common.windowSizeWatcher": {
            "name": "ozp.common.windowSizeWatcher",
            "shortname": "ozp.common.windowSizeWatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common",
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 11,
            "description": "Send a message when the window size changes device sizes\nas defined by Bootstrap:\n\n* lt 768px  = extra-small (xs)\n* gte 768px = small (sm)\n* gte 992 = medium (md)\n* gte 1200 = large (lg)\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "$window",
                    "description": "ng $window"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "windowSizeChangedEvent",
                    "description": "event name"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 16,
            "description": "Controller for Add Applications modal",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$modalInstance",
                    "description": ""
                },
                {
                    "name": "apps",
                    "description": "user's applications"
                }
            ],
            "is_constructor": 1,
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 31,
            "description": "Return a list of apps sorted in alphabetical order",
            "itemtype": "method",
            "name": "sortApps",
            "params": [
                {
                    "name": "apps",
                    "description": "Array of applications to sort"
                }
            ],
            "return": {
                "description": "",
                "type": "[]"
            },
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 50,
            "itemtype": "property",
            "name": "applications The user's applications, sorted alphabetically",
            "type": "{[]}",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 56,
            "itemtype": "property",
            "name": "selectedApps The applications selected to add",
            "type": "{Array}",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 69,
            "description": "Handler invoked when an application is clicked",
            "itemtype": "method",
            "name": "appSelected",
            "params": [
                {
                    "name": "app",
                    "description": "application selected"
                }
            ],
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 79,
            "description": "Returns true if one or more apps are selected",
            "itemtype": "method",
            "name": "areAnyAppsSelected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 89,
            "description": "Adds or removes an application from the list of apps to open\n\nIf the application was in the list previoulsy, it is removed. Otherwise,\nit is added",
            "itemtype": "method",
            "name": "updateSelectedApps",
            "params": [
                {
                    "name": "app",
                    "description": "application to add or remove from the list"
                }
            ],
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 110,
            "description": "Returns true if the given app is in the list to be added, false\notherwise",
            "itemtype": "method",
            "name": "isAppSelected",
            "params": [
                {
                    "name": "app",
                    "description": "the application to check"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 127,
            "description": "Handler invoked when dialog is closed via Open button",
            "itemtype": "method",
            "name": "openApps",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 139,
            "description": "Handler invoked when dialog is closed via Open apps in new dashboard\nbutton",
            "itemtype": "method",
            "name": "openAppsInNewDashboard",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 152,
            "description": "Handler invoked when modal is dismissed via the cancel button",
            "itemtype": "method",
            "name": "cancel",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/appLauncher/appLauncher.js",
            "line": 39,
            "itemtype": "property",
            "name": "Id of the application to launch in Webtop",
            "type": "{String}",
            "class": "appLauncher.AppLauncherCtrl",
            "module": "ozpWebtop.appLauncher",
            "namespace": "appLauncher"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 74,
            "itemtype": "property",
            "name": "dashboardNameLength Max length of dashboard name, based on\ncurrent screen size",
            "type": "{String}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 81,
            "itemtype": "property",
            "name": "dashboards Dashboards for current user",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 87,
            "itemtype": "property",
            "name": "Dashboard layout (grid or desktop)",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 93,
            "itemtype": "property",
            "name": "currentDashboard Current active dashboard",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 99,
            "itemtype": "property",
            "name": "dashboardId Current dashboard id",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 105,
            "itemtype": "property",
            "name": "$scope.maxAppsDisplayed The maximum number of apps that can be\ndisplayed on the toolbar (based on screen width)",
            "type": "{Number}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 111,
            "itemtype": "property",
            "name": "$scope.currentDashboardId The id of the current dashboard",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 116,
            "itemtype": "property",
            "name": "$scope.fullScreenMode Flag indicating if the toolbar is hidden or\n not",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 122,
            "itemtype": "property",
            "name": "$scope.apps All applications available in the marketplace",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 127,
            "itemtype": "property",
            "name": "$scope.frames Frames on current dashboard (includes marketplace\n data like app name, icons, description, etc)",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 133,
            "itemtype": "property",
            "name": "$scope.myPinnedApps Applications in current dashboard that are\n shown in the application toolbar",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 139,
            "itemtype": "property",
            "name": "$scope.myPinnedAppsFirstDisplayedIndex The index (in\n $scope.myPinnedApps) of the first application shown in the application\n toolbar to display",
            "type": "{number}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 146,
            "itemtype": "property",
            "name": "$scope.nextAppsVisible Flag for the 'pagination' next arrow\n in the toolbar",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 152,
            "itemtype": "property",
            "name": "$scope.previousAppsVisible Flag for the 'pagination' previous\n arrow in the toolbar",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 158,
            "itemtype": "property",
            "name": "$scope.layout The current dashboard layout (grid or desktop)",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 226,
            "description": "Launch the user preferences modal dialog\n\nSends launchUserPreferencesModalEvent",
            "itemtype": "method",
            "name": "launchSettingsModal",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 239,
            "description": "Handler invoked when user settings event is fired",
            "itemtype": "method",
            "name": "handleUserSettingsChange",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 261,
            "description": "Handle the deviceSizeChangedEvent\n\nUpdate $scope.maxAppsDisplayed and invoke $scope.setPinnedApps()",
            "itemtype": "method",
            "name": "handleWindowSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "Data from deviceSizeChangedEvent"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 289,
            "description": "Handle the dashboardSwitchedEvent\n\nSet $scope.currentDashboardId and invoke updateApps()\nUpdate current dashboard and layout",
            "itemtype": "method",
            "name": "handleDashboardChange",
            "params": [
                {
                    "name": "dashboardChange",
                    "description": ""
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 314,
            "description": "Set the current dashboard",
            "itemtype": "method",
            "name": "setCurrentDashboard",
            "params": [
                {
                    "name": "board",
                    "description": "Current dashboard"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 323,
            "description": "Use a grid layout",
            "itemtype": "method",
            "name": "useGridLayout",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 331,
            "description": "Use a desktop layout",
            "itemtype": "method",
            "name": "useDesktopLayout",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 339,
            "description": "Set $scope.myPinnedApps\n\nRequires that $scope.frames is set first",
            "itemtype": "method",
            "name": "setPinnedApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 363,
            "description": "Update application data in the toolbar (invoked on a dashboard change)",
            "itemtype": "method",
            "name": "updateApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 389,
            "description": "Maximize (or show) a frame that was previously minimized (hidden)",
            "itemtype": "method",
            "name": "maximizeFrame",
            "params": [
                {
                    "name": "e",
                    "description": "The application to maximize/show",
                    "type": "Object"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 407,
            "description": "Show or hide the application toolbar\n\nIf successful, broadcasts a fullScreenModeToggleEvent",
            "itemtype": "method",
            "name": "toggleFullScreenMode",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 433,
            "description": "A pagination method to show the previous set of apps currently on the\ndashboard in the toolbar, if the screen width isn't wide enough to\ndisplay them all",
            "itemtype": "method",
            "name": "previousApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 453,
            "description": "A pagination method to show the next set of apps currently on the\ndashboard in the toolbar, if the screen width isn't wide enough to\ndisplay them all",
            "itemtype": "method",
            "name": "nextApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 474,
            "description": "Opens the Add Application modal dialog",
            "itemtype": "method",
            "name": "openApplicationsModal",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 492,
            "description": "Add an application to a dashboard",
            "itemtype": "method",
            "name": "addAppToDashboard",
            "params": [
                {
                    "name": "app",
                    "description": "The application to add"
                },
                {
                    "name": "dashboardId",
                    "description": "The dashboard to add the application to"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 46,
            "description": "Remove a frame from the current dashboard and send\ndashboardStateChangedEvent",
            "itemtype": "method",
            "name": "isDisabled",
            "params": [
                {
                    "name": "e",
                    "description": "the frame (?) clicked containing e.id"
                }
            ],
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 62,
            "description": "Hide a frame on the dashboard",
            "itemtype": "method",
            "name": "minimizeFrame",
            "params": [
                {
                    "name": "e",
                    "description": "The frame (?) clicked containing e.id"
                }
            ],
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 76,
            "description": "Show a frame on the dashboard",
            "itemtype": "method",
            "name": "maximizeFrame",
            "params": [
                {
                    "name": "e",
                    "description": "The frame (?) clicked containing e.id"
                }
            ],
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "line": 59,
            "description": "Decides which template to use.",
            "itemtype": "method",
            "name": "getTemplate",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "sameOrigin",
                    "description": "True if the frame comes from the same origin as the webtop,\n    false otherwise.",
                    "type": "Boolean"
                }
            ],
            "class": "dashboardView.ozpManagedFrame",
            "module": "ozpWebtop.dashboardView.desktop.managedFrame",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/genericFrames/iframe.js",
            "line": 23,
            "itemtype": "property",
            "name": "frame.trustedUrl URL",
            "type": "{String}",
            "class": "dashboardView.IframeCtrl",
            "module": "ozpWebtop.dashboardView.desktop.iframe",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 50,
            "itemtype": "property",
            "name": "dashboards User's dashboards",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 56,
            "itemtype": "property",
            "name": "frames Frames on the dashboard (widget instances)",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 62,
            "itemtype": "property",
            "name": "fullScreenMode Flag indicating whether the toolbars are hidden",
            "type": "{boolean}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 68,
            "itemtype": "property",
            "name": "apps Applications in the marketplace",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 74,
            "itemtype": "property",
            "name": "currentDashboard Active dashboard",
            "type": "{string}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 80,
            "itemtype": "property",
            "name": "currentDashboardId Active dashboard id",
            "type": "{string}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 86,
            "itemtype": "property",
            "name": "max TODO define this",
            "type": "{{}}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 145,
            "description": "Handler invoked when a dashboardStateChangedEvent is received",
            "itemtype": "method",
            "name": "dashboardChangeHandler",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 210,
            "description": "Update the active dashboard and broadcast dashboardStateChangedEvent on\ncompletion",
            "itemtype": "method",
            "name": "updateDashboard",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 252,
            "description": "Getter for frame.isMinimized",
            "itemtype": "method",
            "name": "isFrameMinimized",
            "params": [
                {
                    "name": "e",
                    "description": "Frame to get data for"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 267,
            "description": "Getter for frame.isMaximized",
            "itemtype": "method",
            "name": "isFrameMaximized",
            "params": [
                {
                    "name": "e",
                    "description": "Frame to get data for"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 282,
            "description": "Sort the zIndex of all frames",
            "itemtype": "method",
            "name": "sortFrames",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 64,
            "itemtype": "property",
            "name": "deviceSize Current screen size (xs, sm, md, lg)",
            "type": "{string}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 70,
            "itemtype": "property",
            "name": "frames Frames (widgets/apps) on the current dashboard",
            "type": "{Array}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 76,
            "itemtype": "property",
            "name": "apps Applications in the marketplace",
            "type": "{Array}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 82,
            "itemtype": "property",
            "name": "fullScreenMode Flag for full screen mode",
            "type": "{boolean}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 88,
            "itemtype": "property",
            "name": "dashboard Current dashboard",
            "type": "{{}}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 94,
            "itemtype": "property",
            "name": "dashboardId Current dashboardId\nTODO: duplicate info?",
            "type": "{string}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 101,
            "itemtype": "property",
            "name": "intervalPromise promise returned by $interval (keep track of it\nso it can be canceled)",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 107,
            "itemtype": "property",
            "name": "gridOptions Configuration options for Gridster\nTODO: make these available to other components somehow",
            "type": "{Object}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 265,
            "description": "Handle start event resizing a widget on Gridster",
            "itemtype": "method",
            "name": "handleGridsterResizeStart",
            "params": [
                {
                    "name": "uiWidget",
                    "description": "Gridster widget"
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 279,
            "description": "Handle stop event when resizing Gridster widget",
            "itemtype": "method",
            "name": "handleGridsterResizeStop",
            "params": [
                {
                    "name": "uiWidget",
                    "description": ""
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 291,
            "description": "Handler for windowSizeChangedEvent (each time the window size\nchanges, even by a single pixel)\n\nCancels the existing $interval promise and creates a new one to update\nall frames in 200ms",
            "itemtype": "method",
            "name": "handleWindowSizeChange",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 305,
            "description": "Handles the deviceSizeChangedEvent, which occurs whenever the\nscreen size changes device sizes (as defined by Bootstrap)",
            "itemtype": "method",
            "name": "handleDeviceSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "value.deviceSize is one of 'xs', 'sm', 'md', or\n'lg'",
                    "type": "Object"
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 329,
            "description": "Handle the dashboardStateChangedEvent",
            "itemtype": "method",
            "name": "handleDashboardChange",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 406,
            "description": "Reloads the current dashboard",
            "itemtype": "method",
            "name": "reloadDashboard",
            "return": {
                "description": "Promise fulfilled with Boolean, true if dashboard was\n                   found",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 439,
            "description": "Update a single frame after a change (move or resize) has occurred",
            "itemtype": "method",
            "name": "updateFrameAfterChange",
            "params": [
                {
                    "name": "frame",
                    "description": "The frame to update",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise fulfilled with the frame id that was updated",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 458,
            "description": "Update all frames after the user finishes moving or resizing a frame",
            "itemtype": "method",
            "name": "updateAllFramesAfterChange",
            "return": {
                "description": "Promise fulfilled with TODO",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 30,
            "description": "Test method - delete this later",
            "itemtype": "method",
            "name": "sayHello",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 44,
            "description": "Get all dashboard data",
            "itemtype": "method",
            "name": "getDashboardData",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 54,
            "description": "Get all dashboards",
            "itemtype": "method",
            "name": "getDashboards",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 72,
            "description": "Set all dashboard data",
            "itemtype": "method",
            "name": "_setDashboardData",
            "params": [
                {
                    "name": "dashboardData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 84,
            "description": "Set all dashboards",
            "itemtype": "method",
            "name": "setAllDashboards",
            "params": [
                {
                    "name": "dashboards",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 103,
            "description": "Update dashboard layout",
            "itemtype": "method",
            "name": "updateLayoutType",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "layout",
                    "description": "'grid' or 'desktop'"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 123,
            "description": "Toggle the value of a key in a frame",
            "itemtype": "method",
            "name": "toggleFrameKey",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 157,
            "description": "Update the grid layout of a frame in a dashboard",
            "itemtype": "method",
            "name": "updateGridFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "sizeData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 192,
            "description": "Update the desktop layout of a frame in a dashboard\nTODO: what about width and height?",
            "itemtype": "method",
            "name": "updateDesktopFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                },
                {
                    "name": "zIndex",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 224,
            "description": "Check to see if an application is already on a given dashboard",
            "itemtype": "method",
            "name": "isAppOnDashboard",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "applicationId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 241,
            "description": "Create a new frame in a dashboard for a given application\nCreates a frame with with both grid and desktop layout data",
            "itemtype": "method",
            "name": "createFrame",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "appId",
                    "description": ""
                },
                {
                    "name": "gridMaxRows",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 338,
            "description": "Remove a frame from a dashboard",
            "itemtype": "method",
            "name": "removeFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 369,
            "description": "Change the user's current dashboard",
            "itemtype": "method",
            "name": "updateCurrentDashboardName",
            "params": [
                {
                    "name": "dashboardName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 399,
            "description": "Return the name of the user's current dashboard",
            "itemtype": "method",
            "name": "getCurrentDashboardName",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 417,
            "description": "Augment the dashboard.frames data with application-specific data\nNote: data is not persisted, but rather the 'frames' object is modified\nby reference",
            "itemtype": "method",
            "name": "mergeApplicationData",
            "params": [
                {
                    "name": "frames",
                    "description": ""
                },
                {
                    "name": "marketplaceApps",
                    "description": ""
                }
            ],
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 443,
            "description": "Save a dashboard\nTODO: make sure input is a valid dashboard:\n- dashboard.id should be unique\n- all frame.id's should be",
            "itemtype": "method",
            "name": "saveDashboard",
            "params": [
                {
                    "name": "dashboard",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 475,
            "description": "Save a frame in a dashboard\nTODO: make sure input is a valid frame",
            "itemtype": "method",
            "name": "saveFrame",
            "params": [
                {
                    "name": "frame",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 510,
            "description": "Retrieve a frame by id",
            "itemtype": "method",
            "name": "getFrameById",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 531,
            "description": "Retrieve a dashboard by id",
            "itemtype": "method",
            "name": "getDashboardById",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 550,
            "description": "Delete a dashboard",
            "itemtype": "method",
            "name": "removeDashboard",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 580,
            "description": "Create a new dashboard",
            "itemtype": "method",
            "name": "createDashboard",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 616,
            "description": "Get the next available id for a new dashboard\nTODO: this assumes ids are integers and not uuids",
            "itemtype": "method",
            "name": "getNewDashboardId",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 633,
            "description": "Get the user's current dashboard",
            "itemtype": "method",
            "name": "getCurrentDashboard",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 646,
            "description": "Create example dashboards (test purposes only)",
            "itemtype": "method",
            "name": "createExampleDashboards",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 1147,
            "description": "Angular service which provides a local storage interface to the dashboard api\n\nngtype: service",
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/dashboardApi.js",
            "line": 1163,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve dashboards.\n\nngtype: service",
            "class": "models.dashboardApi",
            "module": "ozpWebtop.models.dashboard"
        },
        {
            "file": "src/app/models/marketplaceApi.js",
            "line": 21,
            "description": "Get all application listings",
            "itemtype": "method",
            "name": "getAllApps",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "models.marketplaceApi",
            "module": "ozpWebtop.models.marketplace"
        },
        {
            "file": "src/app/models/marketplaceApi.js",
            "line": 34,
            "description": "Create example marketplace listings (test purposes only)",
            "itemtype": "method",
            "name": "createExampleMarketplace",
            "class": "models.marketplaceApi",
            "module": "ozpWebtop.models.marketplace"
        },
        {
            "file": "src/app/models/marketplaceApi.js",
            "line": 1336,
            "description": "Angular service which provides a local storage interface to the marketplace\napi",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "class": "models.marketplaceApi",
            "module": "ozpWebtop.models.marketplace"
        },
        {
            "file": "src/app/models/marketplaceApi.js",
            "line": 1352,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve marketplace data",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "class": "models.marketplaceApi",
            "module": "ozpWebtop.models.marketplace"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 21,
            "description": "Get all user settings for the current user",
            "itemtype": "method",
            "name": "getUserSettings",
            "return": {
                "description": "All user settings for the current user",
                "type": "*"
            },
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 34,
            "description": "Update all settings for the current user",
            "itemtype": "method",
            "name": "updateAllUserSettings",
            "params": [
                {
                    "name": "userSettings",
                    "description": "All user settings for current user",
                    "type": "Obj"
                }
            ],
            "return": {
                "description": "True if updated successfully, false on error",
                "type": "Boolean"
            },
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 48,
            "description": "Update a specific setting for the current user",
            "itemtype": "method",
            "name": "updateUserSettingsByKey",
            "params": [
                {
                    "name": "key",
                    "description": "Name of user setting to update",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of setting",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if updated successfully, false on error",
                "type": "Boolean"
            },
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 69,
            "description": "Create default settings for the current user - for testing only",
            "itemtype": "method",
            "name": "createExampleUserSettings",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 88,
            "description": "Angular service which provides a local storage interface to the userSettings api.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/models/userSettingsApi.js",
            "line": 103,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve user settings.\n\nngtype: service",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "class": "models.userSettingsApi",
            "module": "ozpWebtop.models.userSettings"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 44,
            "itemtype": "property",
            "name": "usernameLength Max length of username, based on\ncurrent screen size",
            "type": "{Number}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 51,
            "itemtype": "property",
            "name": "fullScreenMode Flag indicating if toolbar should be hidden",
            "type": "{boolean}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 57,
            "itemtype": "property",
            "name": "user Current user's username",
            "type": "{string}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 63,
            "itemtype": "property",
            "name": "messages Messages for current user TBD",
            "type": "{Array}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 104,
            "description": "Handler invoked when window size changes across device size boundaries\nas defined by Bootstrap",
            "itemtype": "method",
            "name": "handleDeviceSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "value.deviceSize is one of 'xs', 'sm', 'md', or 'lg'"
                }
            ],
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/services/dashboardChangeMonitor.js",
            "line": 36,
            "description": "Activate the dashboardChangeMonitor",
            "itemtype": "method",
            "name": "run",
            "class": "general.dashboardChangeMonitor",
            "module": "ozpWebtop.services.dashboardChangeMonitor",
            "namespace": "general"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 28,
            "description": "Test method",
            "itemtype": "method",
            "name": "sayHello",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 42,
            "description": "Get all dashboard data",
            "itemtype": "method",
            "name": "getDashboardData",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 50,
            "description": "Set all dashboard data",
            "itemtype": "method",
            "name": "setDashboardData",
            "params": [
                {
                    "name": "dashboardData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 63,
            "description": "Get all user settings",
            "itemtype": "method",
            "name": "getUserSettings",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 71,
            "description": "Set all user settings",
            "itemtype": "method",
            "name": "setUserSettingsData",
            "params": [
                {
                    "name": "userSettingsData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 89,
            "description": "Get all apps (listings) in marketplace",
            "itemtype": "method",
            "name": "getApps",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 112,
            "description": "Set all apps (listings) in marketplace (test use only)",
            "itemtype": "method",
            "name": "setApps",
            "params": [
                {
                    "name": "apps",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 122,
            "description": "Get resource from IWC bus",
            "params": [
                {
                    "name": "dst",
                    "description": "IWC destination like data.api"
                },
                {
                    "name": "resource",
                    "description": "IWC resource to get"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 140,
            "description": "Set resource on IWC bus",
            "params": [
                {
                    "name": "dst",
                    "description": "IWC destination like data.api"
                },
                {
                    "name": "resource",
                    "description": "IWC resource to set"
                },
                {
                    "name": "setData",
                    "description": "Value of resource"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 30,
            "description": "Get all dashboard data",
            "itemtype": "method",
            "name": "getDashboardData",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 38,
            "description": "Set all dashboard data",
            "itemtype": "method",
            "name": "setDashboardData",
            "params": [
                {
                    "name": "dashboardData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 47,
            "description": "Get all user settings",
            "itemtype": "method",
            "name": "getUserSettings",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 55,
            "description": "Set all user settings",
            "itemtype": "method",
            "name": "setUserSettingsData",
            "params": [
                {
                    "name": "userSettingsData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 64,
            "description": "Get all apps (listings)",
            "itemtype": "method",
            "name": "getApps",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 72,
            "description": "Set all apps (test use only)",
            "itemtype": "method",
            "name": "setApps",
            "params": [
                {
                    "name": "apps",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 81,
            "description": "Get data from Local Storage",
            "itemtype": "method",
            "name": "_getData",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/localStorageInterface.js",
            "line": 99,
            "description": "Set data in Local Storage",
            "itemtype": "method",
            "name": "_setData",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.localStorageInterface",
            "module": "ozpWebtop.services.localStorageInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 37,
            "itemtype": "property",
            "name": "preferences The user's preferences",
            "type": "{{}}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 42,
            "itemtype": "property",
            "name": "dashboards The user's dashboards",
            "type": "{Array}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 48,
            "itemtype": "property",
            "name": "validNamePattern Regex for valid dashboard names",
            "type": "{RegExp}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 54,
            "itemtype": "property",
            "name": "currentDashboardId User's current dashboard id",
            "type": "{String}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 60,
            "itemtype": "property",
            "name": "newDashboardName Name of new dashboard to create. An\nobject to support ng data binding",
            "type": "{{name: string}}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 69,
            "itemtype": "property",
            "name": "addingNewBoard Flag indicating if a new dashboard is being\nadded",
            "type": "{boolean}",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 96,
            "description": "Makes changes to an existing dashboard\n\nInvoked after user 'submits' the modal. Checks to see if this dashboard\nwas flagged for deletion or renamed. If so, the corresponding changes\nare made",
            "itemtype": "method",
            "name": "updateExistingDashboard",
            "params": [
                {
                    "name": "dashboardId",
                    "description": "Id of dashboard to update",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 135,
            "description": "Handler invoked when dialog is closed via OK button\n\n- Makes changes to any existing dashboards (deletions or renames)\n- Adds a new dashboard (if indicated by user)\n- Updates user preferences\n- Broadcasts userPreferencesUpdatedEvent event",
            "itemtype": "method",
            "name": "ok",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 183,
            "description": "Handler invoked when modal is dismissed via the cancel button",
            "itemtype": "method",
            "name": "cancel",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 192,
            "description": "Handler invoked when the delete button is clicked for a given dashboard\n\nEnsures user is not going to delete their last dashboard, then flags\nthe given dashboard for deletion",
            "itemtype": "method",
            "name": "deleteClicked",
            "params": [
                {
                    "name": "dashboard",
                    "description": ""
                }
            ],
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 222,
            "description": "Handler invoked when the undo delete button is clicked for a given\ndashboard\n\nResets the deletion flag for the dashboard",
            "itemtype": "method",
            "name": "undoDeleteClicked",
            "params": [
                {
                    "name": "dashboard",
                    "description": "The dashboard to unflag for deletion",
                    "type": "Object"
                }
            ],
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 239,
            "description": "Handler invoked when the add dashboard button is clicked",
            "itemtype": "method",
            "name": "addDashboardClicked",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/userPreferencesModal/userSettings.js",
            "line": 248,
            "description": "Handler invoked when the undo add dashboard button is clicked",
            "itemtype": "method",
            "name": "undoAddDashboardClicked",
            "class": "userSettings.ModalInstanceCtrl",
            "module": "ozpWebtop.userSettings",
            "namespace": "userSettings"
        },
        {
            "file": "src/app/constants.js",
            "line": 19,
            "description": "URL of OZONE bus used by the application",
            "itemtype": "property",
            "name": "iwcOzoneBus",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 27,
            "description": "Flag to use IWC",
            "itemtype": "property",
            "name": "useIwc",
            "type": "Boolean",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 38,
            "description": "Event fired when the window size changes across device size boundaries as\ndefined by Bootstrap (xs, sm, md, lg)",
            "itemtype": "property",
            "name": "deviceSizeChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 47,
            "description": "Event fired when the window size changes by 1px or more",
            "itemtype": "property",
            "name": "windowSizeChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 55,
            "description": "Event fired when the state of the active dashboard changes (frames are\nadded or removed, shown or hidden, etc)",
            "itemtype": "property",
            "name": "dashboardStateChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 64,
            "description": "Event fired when the active dashboard is switched",
            "itemtype": "property",
            "name": "dashboardSwitchedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 72,
            "description": "Event fired when the user updates their preferences (add/remove/rename\ndashboards, change theme, etc)",
            "itemtype": "property",
            "name": "userPreferencesUpdatedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 81,
            "description": "Event fired to indicate that the user preferences modal dialog should be\ndisplayed",
            "itemtype": "property",
            "name": "launchUserPreferencesModalEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 90,
            "description": "Event fired when full-screen mode is changed",
            "itemtype": "property",
            "name": "fullScreenChangeEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 98,
            "description": "Event fired when app icon is clicked in the app toolbar in grid layout",
            "itemtype": "property",
            "name": "highlightFrameOnGridLayoutEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 24,
            "description": "Truncate a string of text and add an ellipsis",
            "itemtype": "method",
            "name": "elliptical",
            "params": [
                {
                    "name": "text",
                    "description": "a string of text",
                    "type": "String"
                },
                {
                    "name": "ellipOption",
                    "description": "a flag if an ellipsis is desired",
                    "type": "Boolean"
                },
                {
                    "name": "maxLength",
                    "description": "the maximum length the string can be",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "truncated input, optionally with an ellipsis",
                "type": "String"
            },
            "class": "ozp.common.elliptical",
            "module": "ozp.common.ellipticalFilter",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 36,
            "description": "Get a connected OZP client",
            "itemtype": "method",
            "name": "getClient",
            "return": {
                "description": "fulfilled value is a connected OZP client",
                "type": "Promise"
            },
            "class": "ozp.common.iwc.iwcConnectedClient",
            "module": "ozp.common.iwc.client",
            "namespace": "ozp.common.iwc"
        },
        {
            "file": "src/common/localStorage/localstorage.js",
            "line": 47,
            "description": "I clear the cache",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "LocalCache"
            },
            "class": "ozp.common.LocalStorage",
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/localStorage/localstorage.js",
            "line": 59,
            "description": "I get an item from the cache. If the item cannot be\n found, I can pass back an optional default value",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "defaultValue",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "ozp.common.LocalStorage",
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/localStorage/localstorage.js",
            "line": 95,
            "description": "I check to see if the given key exists in the storage container",
            "itemtype": "method",
            "name": "hasItem",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ozp.common.LocalStorage",
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/localStorage/localstorage.js",
            "line": 108,
            "description": "I remove the given item from the cache",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "LocalCache"
            },
            "class": "ozp.common.LocalStorage",
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/localStorage/localstorage.js",
            "line": 121,
            "description": "I store the item in the cache. When doing this, I automatically\nserialize the value.\n\nNOTE: Not all value (ex. functions and private variables) will\nserialize.",
            "itemtype": "method",
            "name": "setItem",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "LocalCache"
            },
            "class": "ozp.common.LocalStorage",
            "module": "ozp.common.localStorage",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/urlOriginComparer/compareurl.js",
            "line": 21,
            "description": "Determine if the given URL represents the same origin as the application",
            "itemtype": "method",
            "name": "compareUrl",
            "static": 1,
            "params": [
                {
                    "name": "frameUrl",
                    "description": "The url of a frame",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the url represents the same origin as the webtop,\nfalse otherwise",
                "type": "Boolean"
            },
            "class": "ozp.common.compareUrl",
            "module": "ozp.common.urlOriginComparer",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/urlOriginComparer/compareurl.js",
            "line": 50,
            "description": "An internal method to infer the port based on other information provided",
            "itemtype": "method",
            "name": "inferPort",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "an object representing either an anchor tag or the window.location",
                    "type": "Object"
                }
            ],
            "class": "ozp.common.compareUrl",
            "module": "ozp.common.urlOriginComparer",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/utilities/utilities.js",
            "line": 25,
            "description": "Generate a uuid as per http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript",
            "itemtype": "method",
            "name": "generateUuid",
            "return": {
                "description": "A randomly generated UUID in form 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'",
                "type": "String"
            },
            "class": "ozp.common.Utilities",
            "module": "ozp.common.utilities",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/utilities/utilities.js",
            "line": 40,
            "description": "Eliminate duplicate values from an array",
            "itemtype": "method",
            "name": "eliminateDuplicates",
            "params": [
                {
                    "name": "arr",
                    "description": "An array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Input array with duplicates removed",
                "type": "Array"
            },
            "class": "ozp.common.Utilities",
            "module": "ozp.common.utilities",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 58,
            "description": "Activate the windowSizeWatcher",
            "itemtype": "method",
            "name": "run",
            "class": "ozp.common.windowSizeWatcher",
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 71,
            "description": "Get the current device size",
            "itemtype": "method",
            "name": "getCurrentSize",
            "return": {
                "description": "device size, one of xs, sm, md, or lg",
                "type": "String"
            },
            "class": "ozp.common.windowSizeWatcher",
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:79"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/appToolbar/appToolbar.js:492"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/desktop/desktop.js:252"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/desktop/desktop.js:267"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:439"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:458"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:338"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:399"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:443"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:475"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:510"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:531"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:550"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:580"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:616"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:633"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/dashboardApi.js:646"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/marketplaceApi.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/userSettingsApi.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/userSettingsApi.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/userSettingsApi.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models/userSettingsApi.js:69"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:42"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:63"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:140"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:81"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/localStorageInterface.js:99"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/userPreferencesModal/userSettings.js:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/iwcConnectedClient/iwcConnectedClient.js:36"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/localStorage/localstorage.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/localStorage/localstorage.js:59"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/localStorage/localstorage.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/localStorage/localstorage.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/localStorage/localstorage.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/utilities/utilities.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/utilities/utilities.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/windowSizeWatcher/windowSizeWatcher.js:71"
        },
        {
            "message": "Missing item type\nController for Add Applications modal",
            "line": " src/app/addApplicationsModal/addApplications.js:16"
        },
        {
            "message": "Missing item type\nAngular service which provides a local storage interface to the dashboard api\n\nngtype: service",
            "line": " src/app/models/dashboardApi.js:1147"
        },
        {
            "message": "Missing item type\nAngular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve dashboards.\n\nngtype: service",
            "line": " src/app/models/dashboardApi.js:1163"
        },
        {
            "message": "Missing item type\nAngular service which provides a local storage interface to the marketplace\napi",
            "line": " src/app/models/marketplaceApi.js:1336"
        },
        {
            "message": "Missing item type\nAngular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve marketplace data",
            "line": " src/app/models/marketplaceApi.js:1352"
        },
        {
            "message": "Missing item type\nAngular service which provides a local storage interface to the userSettings api.",
            "line": " src/app/models/userSettingsApi.js:88"
        },
        {
            "message": "Missing item type\nAngular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve user settings.\n\nngtype: service",
            "line": " src/app/models/userSettingsApi.js:103"
        },
        {
            "message": "Missing item type\nGet resource from IWC bus",
            "line": " src/app/services/iwcInterface.js:122"
        },
        {
            "message": "Missing item type\nSet resource on IWC bus",
            "line": " src/app/services/iwcInterface.js:140"
        }
    ]
}