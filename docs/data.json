{
    "project": {
        "name": "ozpwebtop",
        "description": "",
        "version": "0.4.2-rc",
        "url": "https://github.com/ozone-development/ozp-webtop"
    },
    "files": {
        "src/app/addApplicationsModal/addApplications.js": {
            "name": "src/app/addApplicationsModal/addApplications.js",
            "modules": {
                "ozpWebtop.addApplicationsModal": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/appToolbar/appToolbar.js": {
            "name": "src/app/appToolbar/appToolbar.js",
            "modules": {
                "ozpWebtop.appToolbar": 1
            },
            "classes": {
                "appToolbar.ApplicationToolbarCtrl": 1,
                "appToolbar.appToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "appToolbar": 1
            }
        },
        "src/app/dashboardView/button/ozpbutton.js": {
            "name": "src/app/dashboardView/button/ozpbutton.js",
            "modules": {
                "ozpWebtop.dashboardView.button": 1
            },
            "classes": {
                "dashboardView.ozpButton": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/chrome/chrome.js": {
            "name": "src/app/dashboardView/chrome/chrome.js",
            "modules": {
                "ozpWebtop.dashboardView.chrome": 1
            },
            "classes": {
                "dashboardView.ChromeCtrl": 1,
                "dashboardView.ozpChrome": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/desktop/desktop.js": {
            "name": "src/app/dashboardView/desktop/desktop.js",
            "modules": {
                "ozpWebtop.dashboardView.desktop": 1
            },
            "classes": {
                "dashboardView.DesktopCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/desktop/ozpmanagedframe.js": {
            "name": "src/app/dashboardView/desktop/ozpmanagedframe.js",
            "modules": {
                "ozpWebtop.dashboardView.desktop.managedFrame": 1
            },
            "classes": {
                "dashboardView.ozpManagedFrame": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/grid/grid.js": {
            "name": "src/app/dashboardView/grid/grid.js",
            "modules": {
                "ozpWebtop.dashboardView.grid": 1
            },
            "classes": {
                "dashboardView.GridCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/dashboardViewCtrl.js": {
            "name": "src/app/dashboardView/dashboardViewCtrl.js",
            "modules": {
                "ozpWebtop.dashboardView": 1
            },
            "classes": {
                "dashboardView.DashboardViewCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/editDashboardModal/editDashboard.js": {
            "name": "src/app/editDashboardModal/editDashboard.js",
            "modules": {
                "ozpWebtop.editDashboardModal": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/ozpToolbar/ozpToolbar.js": {
            "name": "src/app/ozpToolbar/ozpToolbar.js",
            "modules": {
                "ozpWebtop.ozpToolbar": 1
            },
            "classes": {
                "ozpToolbar.OzpToolbarCtrl": 1,
                "ozpToolbar.ozpToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "ozpToolbar": 1
            }
        },
        "src/app/services/iwcInterface.js": {
            "name": "src/app/services/iwcInterface.js",
            "modules": {
                "ozpWebtop.services.iwcInterface": 1
            },
            "classes": {
                "services.iwcInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            }
        },
        "src/app/services/restInterface.js": {
            "name": "src/app/services/restInterface.js",
            "modules": {
                "ozpWebtop.services.restInterface": 1
            },
            "classes": {
                "services.restInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            }
        },
        "src/app/settingsModal/settingsModal.js": {
            "name": "src/app/settingsModal/settingsModal.js",
            "modules": {
                "ozpWebtop.settingsModal": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/urlWidgetLauncher/urlWidgetLauncher.js": {
            "name": "src/app/urlWidgetLauncher/urlWidgetLauncher.js",
            "modules": {
                "ozpWebtop.urlWidgetLauncher": 1
            },
            "classes": {
                "urlWidgetLauncher.UrlWidgetLauncherCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "urlWidgetLauncher": 1
            }
        },
        "src/app/app.js": {
            "name": "src/app/app.js",
            "modules": {
                "ozpWebtop": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/constants.js": {
            "name": "src/app/constants.js",
            "modules": {
                "ozpWebtop.constants": 1
            },
            "classes": {
                "constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/models.js": {
            "name": "src/app/models.js",
            "modules": {
                "ozpWebtop.models": 1
            },
            "classes": {
                "models.models": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "src/common/ellipticalFilter/elliptical.js": {
            "name": "src/common/ellipticalFilter/elliptical.js",
            "modules": {
                "ozp.common.ellipticalFilter": 1
            },
            "classes": {
                "ozp.common.elliptical": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/iwcConnectedClient/iwcConnectedClient.js": {
            "name": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "modules": {
                "ozp.common.iwc.client": 1
            },
            "classes": {
                "ozp.common.iwc.iwcConnectedClient": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common.iwc": 1
            }
        },
        "src/common/utilities/utilities.js": {
            "name": "src/common/utilities/utilities.js",
            "modules": {
                "ozp.common.utilities": 1
            },
            "classes": {
                "ozp.common.Utilities": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        },
        "src/common/windowSizeWatcher/windowSizeWatcher.js": {
            "name": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "modules": {
                "ozp.common.windowSizeWatcher": 1
            },
            "classes": {
                "ozp.common.windowSizeWatcher": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        }
    },
    "modules": {
        "ozpWebtop.addApplicationsModal": {
            "name": "ozpWebtop.addApplicationsModal",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 3,
            "description": "Add Applications modal dialog",
            "requires": [
                "ui.bootstrap"
            ]
        },
        "ozpWebtop.appToolbar": {
            "name": "ozpWebtop.appToolbar",
            "submodules": {},
            "classes": {
                "appToolbar.ApplicationToolbarCtrl": 1,
                "appToolbar.appToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "appToolbar": 1
            },
            "tag": "module",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 622,
            "description": "The application toolbar in the Webtop.",
            "requires": [
                "ui.router",
                "ui.bootstrap",
                "ozpWebtop.models",
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.addApplicationsModal",
                "ozpWebtop.editDashboardModal",
                "ozp.common.windowSizeWatcher"
            ]
        },
        "ozpWebtop.dashboardView.button": {
            "name": "ozpWebtop.dashboardView.button",
            "submodules": {},
            "classes": {
                "dashboardView.ozpButton": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/button/ozpbutton.js",
            "line": 11,
            "description": "ozpButton module"
        },
        "ozpWebtop.dashboardView.chrome": {
            "name": "ozpWebtop.dashboardView.chrome",
            "submodules": {},
            "classes": {
                "dashboardView.ChromeCtrl": 1,
                "dashboardView.ozpChrome": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 95,
            "description": "ozp Chrome module",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.models"
            ]
        },
        "ozpWebtop.dashboardView.desktop": {
            "name": "ozpWebtop.dashboardView.desktop",
            "submodules": {},
            "classes": {
                "dashboardView.DesktopCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 15,
            "description": "Desktop layout main controller",
            "requires": [
                "ozpWebtop.constants",
                "ozpWebtop.models"
            ]
        },
        "ozpWebtop.dashboardView.desktop.managedFrame": {
            "name": "ozpWebtop.dashboardView.desktop.managedFrame",
            "submodules": {},
            "classes": {
                "dashboardView.ozpManagedFrame": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/desktop/ozpmanagedframe.js",
            "line": 13,
            "description": "Desktop managed frame",
            "requires": [
                "ozpWebtop.models",
                "ozpWebtop.dashboardView.desktop.iframe"
            ]
        },
        "ozpWebtop.dashboardView.grid": {
            "name": "ozpWebtop.dashboardView.grid",
            "submodules": {},
            "classes": {
                "dashboardView.GridCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 16,
            "description": "Grid layout main controller",
            "requires": [
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.constants",
                "ozpWebtop.models"
            ]
        },
        "ozpWebtop.dashboardView": {
            "name": "ozpWebtop.dashboardView",
            "submodules": {},
            "classes": {
                "dashboardView.DashboardViewCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            },
            "tag": "module",
            "file": "src/app/dashboardView/dashboardViewCtrl.js",
            "line": 13,
            "description": "Dashboard view controller\n\nParent controller for Sticky State (ui-router-extras)"
        },
        "ozpWebtop.editDashboardModal": {
            "name": "ozpWebtop.editDashboardModal",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/editDashboardModal/editDashboard.js",
            "line": 3,
            "description": "Edit Dashboard modal dialog",
            "requires": [
                "ui.bootstrap"
            ]
        },
        "ozpWebtop.ozpToolbar": {
            "name": "ozpWebtop.ozpToolbar",
            "submodules": {},
            "classes": {
                "ozpToolbar.OzpToolbarCtrl": 1,
                "ozpToolbar.ozpToolbar": 1
            },
            "fors": {},
            "namespaces": {
                "ozpToolbar": 1
            },
            "tag": "module",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 158,
            "description": "The ozp toolbar component shown in the Webtop.",
            "requires": [
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.models"
            ]
        },
        "ozpWebtop.services.iwcInterface": {
            "name": "ozpWebtop.services.iwcInterface",
            "submodules": {},
            "classes": {
                "services.iwcInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            },
            "tag": "module",
            "file": "src/app/services/iwcInterface.js",
            "line": 14,
            "description": "Interface for working with IWC",
            "requires": [
                "ozp.common.iwc.client"
            ]
        },
        "ozpWebtop.services.restInterface": {
            "name": "ozpWebtop.services.restInterface",
            "submodules": {},
            "classes": {
                "services.restInterface": 1
            },
            "fors": {},
            "namespaces": {
                "services": 1
            },
            "tag": "module",
            "file": "src/app/services/restInterface.js",
            "line": 12,
            "description": "Interface for working with the ozp-rest API"
        },
        "ozpWebtop.settingsModal": {
            "name": "ozpWebtop.settingsModal",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/settingsModal/settingsModal.js",
            "line": 2,
            "requires": [
                "ui.bootstrap"
            ]
        },
        "ozpWebtop.urlWidgetLauncher": {
            "name": "ozpWebtop.urlWidgetLauncher",
            "submodules": {},
            "classes": {
                "urlWidgetLauncher.UrlWidgetLauncherCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "urlWidgetLauncher": 1
            },
            "tag": "module",
            "file": "src/app/urlWidgetLauncher/urlWidgetLauncher.js",
            "line": 14,
            "description": "The url widget launcher launches a new widget in the user's current dashboard\n(a new dashboard is created containing this widget if no dashboards for the\nuser exist). This is a stop gap solution - ultimately, this functionality\nneeds to be handled via IWC Intents"
        },
        "ozpWebtop": {
            "name": "ozpWebtop",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 3,
            "description": "Top level module of the Webtop. When declared in an HTML file, it bootstraps\nthe Webtop.",
            "example": [
                "\n    <body ng-app=\"ozpWebtop\"> ... </body>"
            ],
            "requires": [
                "ozp.common.ellipticalFilter",
                "ozp.common.iwc.client",
                "ozp.common.utilities",
                "ozp.common.windowSizeWatcher",
                "ozpWebtop.constants",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.restInterface",
                "ozpWebtop.models",
                "ozpWebtop.appToolbar",
                "ozpWebtop.ozpToolbar",
                "ozpWebtop.dashboardView.button",
                "ozpWebtop.dashboardView.chrome",
                "ozpWebtop.dashboardView.desktop",
                "ozpWebtop.dashboardView.desktop.managedFrame\n* @requires ozpWebtop.dashboardView",
                "ozpWebtop.dashboardView.grid",
                "ozpWebtop.addApplicationsModal",
                "ozpWebtop.editDashboardModal",
                "ozpWebtop.settingsModal",
                "ozpWebtop.urlWidgetLauncher",
                "ui.router",
                "ct.ui.router.extras",
                "ui.bootstrap",
                "gridster",
                "ozpIwcClient",
                "ozpClassification"
            ]
        },
        "ozpWebtop.constants": {
            "name": "ozpWebtop.constants",
            "submodules": {},
            "classes": {
                "constants": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/constants.js",
            "line": 10,
            "description": "Constants used throughout the application"
        },
        "ozpWebtop.models": {
            "name": "ozpWebtop.models",
            "submodules": {},
            "classes": {
                "models.models": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            },
            "tag": "module",
            "file": "src/app/models.js",
            "line": 19,
            "description": "models and Data Access Layer for webtop",
            "requires": [
                "ozp.common.utilities",
                "ozpWebtop.constants",
                "ozpWebtop.services.iwcInterface",
                "ozpWebtop.services.restInterface"
            ]
        },
        "ozp.common.ellipticalFilter": {
            "name": "ozp.common.ellipticalFilter",
            "submodules": {},
            "classes": {
                "ozp.common.elliptical": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 11,
            "description": "elliptical filter"
        },
        "ozp.common.iwc.client": {
            "name": "ozp.common.iwc.client",
            "submodules": {},
            "classes": {
                "ozp.common.iwc.iwcConnectedClient": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common.iwc": 1
            },
            "tag": "module",
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 15,
            "description": "IWC client",
            "requires": [
                "ozpIwcClient",
                "ozpWebtop.constants"
            ]
        },
        "ozp.common.utilities": {
            "name": "ozp.common.utilities",
            "submodules": {},
            "classes": {
                "ozp.common.Utilities": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/utilities/utilities.js",
            "line": 10,
            "description": "Various utility functions"
        },
        "ozp.common.windowSizeWatcher": {
            "name": "ozp.common.windowSizeWatcher",
            "submodules": {},
            "classes": {
                "ozp.common.windowSizeWatcher": 1
            },
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 11,
            "description": "Window size watcher",
            "requires": [
                "ozpWebtop.constants"
            ]
        }
    },
    "classes": {
        "appToolbar.ApplicationToolbarCtrl": {
            "name": "appToolbar.ApplicationToolbarCtrl",
            "shortname": "appToolbar.ApplicationToolbarCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 21,
            "description": "Application toolbar on the bottom of Webtop. Contains a menu for adding\nfavorited apps to the dashboard and shows names/icons for all apps\ncurrently on the dashboard. Clicking on the app name/icon buttons in the\ntoolbar results in the application being shown or hidden from the dashboard\nview (in desktop layout)\n\ndashboard selector\nbuttons to switch between grid and desktop layouts\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "$scope service"
                },
                {
                    "name": "$rootScope",
                    "description": "$rootScope service"
                },
                {
                    "name": "$state",
                    "description": "$state service"
                },
                {
                    "name": "$modal",
                    "description": "$modal service from ui.bootstrap"
                },
                {
                    "name": "$interval",
                    "description": "$interval service from ui.bootstrap"
                },
                {
                    "name": "$window",
                    "description": "$window service from ui.bootstrap"
                },
                {
                    "name": "models",
                    "description": "webtop data model"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "Notify when window size changes"
                },
                {
                    "name": "maxStickyBoards",
                    "description": "max number of dashboards"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                },
                {
                    "name": "highlightFrameOnGridLayoutEvent",
                    "description": "event name"
                }
            ]
        },
        "appToolbar.appToolbar": {
            "name": "appToolbar.appToolbar",
            "shortname": "appToolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar",
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 622,
            "description": "Directive for the application toolbar\n\nngtype: directive",
            "static": 1
        },
        "dashboardView.ozpButton": {
            "name": "dashboardView.ozpButton",
            "shortname": "dashboardView.ozpButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.button",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/button/ozpbutton.js",
            "line": 11,
            "description": "ozpButton Renders button with an icon to the left and text to the right.\n\nngtype: directive",
            "is_constructor": 1
        },
        "dashboardView.ChromeCtrl": {
            "name": "dashboardView.ChromeCtrl",
            "shortname": "dashboardView.ChromeCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 16,
            "description": "ChromeCtrl aids the ozpChrome directive in knowing its location\n(grid or desktop).\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "models",
                    "description": "dashboard data"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                }
            ]
        },
        "dashboardView.ozpChrome": {
            "name": "dashboardView.ozpChrome",
            "shortname": "dashboardView.ozpChrome",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 95,
            "description": "Directive for chrome (bar appearing across the top of each widget)\n\nngtype: directive",
            "static": 1
        },
        "dashboardView.DesktopCtrl": {
            "name": "dashboardView.DesktopCtrl",
            "shortname": "dashboardView.DesktopCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 15,
            "description": "Controller for managing apps/widgets in desktop layout on a dashboard\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "$interval",
                    "description": "ng $interval"
                },
                {
                    "name": "models",
                    "description": "dashboard data"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                }
            ]
        },
        "dashboardView.ozpManagedFrame": {
            "name": "dashboardView.ozpManagedFrame",
            "shortname": "dashboardView.ozpManagedFrame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.desktop.managedFrame",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/ozpmanagedframe.js",
            "line": 13,
            "description": "ngtype: directive",
            "is_constructor": 1,
            "params": [
                {
                    "name": "models",
                    "description": "the API for dashboard information {{#crossLink \"models\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ]
        },
        "dashboardView.GridCtrl": {
            "name": "dashboardView.GridCtrl",
            "shortname": "dashboardView.GridCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 16,
            "description": "Controller managing the frames in the grid layout\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "an Angular scope",
                    "type": "Object"
                },
                {
                    "name": "$rootScope",
                    "description": "the Angular root scope",
                    "type": "Object"
                },
                {
                    "name": "$interval",
                    "description": "the Angular interval service",
                    "type": "Object"
                },
                {
                    "name": "$q",
                    "description": "the Angular q service",
                    "type": "Object"
                },
                {
                    "name": "$timeout",
                    "description": "the Angular timeout service",
                    "type": "Object"
                },
                {
                    "name": "models",
                    "description": "the API for dashboard information",
                    "type": "Object"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "service that notifies on window size\nchanges",
                    "type": "Object"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "windowSizeChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "dashboardStateChangedEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "highlightFrameOnGridLayoutEvent",
                    "description": "event name",
                    "type": "String"
                }
            ]
        },
        "dashboardView.DashboardViewCtrl": {
            "name": "dashboardView.DashboardViewCtrl",
            "shortname": "dashboardView.DashboardViewCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.dashboardView",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/dashboardViewCtrl.js",
            "line": 13,
            "description": "Dashboard view controller\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "an Angular scope",
                    "type": "Object"
                }
            ]
        },
        "ozpToolbar.OzpToolbarCtrl": {
            "name": "ozpToolbar.OzpToolbarCtrl",
            "shortname": "ozpToolbar.OzpToolbarCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 14,
            "description": "Controller for ozp toolbar located at the top of Webtop\n\nIncludes:\n- menu with links to other OZP resources\n- notifications (TODO)\n- username button with dropdown to access user preferences, help, and logout\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "windowSizeWatcher",
                    "description": "notify when window size changes"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "fullScreenModeToggleEvent",
                    "description": "event name"
                }
            ]
        },
        "ozpToolbar.ozpToolbar": {
            "name": "ozpToolbar.ozpToolbar",
            "shortname": "ozpToolbar.ozpToolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar",
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 158,
            "description": "Directive for the ozp toolbar\n\nngtype: directive",
            "static": 1
        },
        "services.iwcInterface": {
            "name": "services.iwcInterface",
            "shortname": "services.iwcInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services",
            "file": "src/app/services/iwcInterface.js",
            "line": 14,
            "description": "Interface for working with IWC\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$q",
                    "description": "ng $q service"
                },
                {
                    "name": "$log",
                    "description": "ng $log service"
                },
                {
                    "name": "iwcConnectedClient",
                    "description": "IWC client service"
                }
            ]
        },
        "services.restInterface": {
            "name": "services.restInterface",
            "shortname": "services.restInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.services.restInterface",
            "namespace": "services",
            "file": "src/app/services/restInterface.js",
            "line": 12,
            "description": "Interface for working with ozp-rest\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$window",
                    "description": "ng $window service"
                },
                {
                    "name": "$log",
                    "description": "ng $log service"
                },
                {
                    "name": "$http",
                    "description": "ng $http service\n* @param $q ng $q service"
                }
            ]
        },
        "urlWidgetLauncher.UrlWidgetLauncherCtrl": {
            "name": "urlWidgetLauncher.UrlWidgetLauncherCtrl",
            "shortname": "urlWidgetLauncher.UrlWidgetLauncherCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.urlWidgetLauncher",
            "namespace": "urlWidgetLauncher",
            "file": "src/app/urlWidgetLauncher/urlWidgetLauncher.js",
            "line": 14,
            "description": "Controller for url widget launcher\n\nngtype: controller",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "ng $scope"
                },
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                }
            ]
        },
        "constants": {
            "name": "constants",
            "shortname": "constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.constants",
            "namespace": "",
            "file": "src/app/constants.js",
            "line": 10,
            "description": "Constants used throughout the application\n\nngtype: constant",
            "static": 1
        },
        "models.models": {
            "name": "models.models",
            "shortname": "models.models",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtop.models",
            "namespace": "models",
            "file": "src/app/models.js",
            "line": 19,
            "description": "Models and Data Access Layer for webtop. The service itself 'caches' data\nfrom the server for both webtop data and Listing (application) data. Data\nis always read locally. When data is written to the server, it is written\nto the local 'cache' first, then asynchronously sent to the server in a\n'fire and forget' manner. If the write fails, we will ignore it and hope\nit succeeds next time. This has the benefit of making all the code\nsynchronous, which, in addition to being much faster, greatly simplifies\nthe API\n\nngtype: factory",
            "static": 1
        },
        "ozp.common.elliptical": {
            "name": "ozp.common.elliptical",
            "shortname": "ozp.common.elliptical",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.ellipticalFilter",
            "namespace": "ozp.common",
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 11,
            "description": "elliptical filter\n\nngtype: filter",
            "static": 1
        },
        "ozp.common.iwc.iwcConnectedClient": {
            "name": "ozp.common.iwc.iwcConnectedClient",
            "shortname": "ozp.common.iwc.iwcConnectedClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.iwc.client",
            "namespace": "ozp.common.iwc",
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 15,
            "description": "Provides a single connected IWC client",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$q",
                    "description": "ng $q service"
                },
                {
                    "name": "iwcClient",
                    "description": "iwcClient service from ozp-iwc-angular library"
                }
            ]
        },
        "ozp.common.Utilities": {
            "name": "ozp.common.Utilities",
            "shortname": "ozp.common.Utilities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.utilities",
            "namespace": "ozp.common",
            "file": "src/common/utilities/utilities.js",
            "line": 10,
            "description": "Various utility functions\n\nngtype: factory",
            "is_constructor": 1
        },
        "ozp.common.windowSizeWatcher": {
            "name": "ozp.common.windowSizeWatcher",
            "shortname": "ozp.common.windowSizeWatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common",
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 11,
            "description": "Send a message when the window size changes device sizes\nas defined by Bootstrap:\n\n* lt 768px  = extra-small (xs)\n* gte 768px = small (sm)\n* gte 992 = medium (md)\n* gte 1200 = large (lg)\n\nngtype: factory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$rootScope",
                    "description": "ng $rootScope"
                },
                {
                    "name": "$window",
                    "description": "ng $window"
                },
                {
                    "name": "deviceSizeChangedEvent",
                    "description": "event name"
                },
                {
                    "name": "windowSizeChangedEvent",
                    "description": "event name"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 14,
            "description": "Controller for Add Applications modal",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$modalInstance",
                    "description": ""
                },
                {
                    "name": "apps",
                    "description": "user's applications"
                }
            ],
            "is_constructor": 1,
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 29,
            "description": "Return a list of apps sorted in alphabetical order",
            "itemtype": "method",
            "name": "sortApps",
            "params": [
                {
                    "name": "apps",
                    "description": "Array of applications to sort"
                }
            ],
            "return": {
                "description": "",
                "type": "[]"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 48,
            "itemtype": "property",
            "name": "applications The user's applications, sorted alphabetically",
            "type": "{[]}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 54,
            "itemtype": "property",
            "name": "selectedApps The applications selected to add",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 71,
            "description": "Handler invoked when an application is clicked",
            "itemtype": "method",
            "name": "appSelected",
            "params": [
                {
                    "name": "app",
                    "description": "application selected"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 81,
            "description": "Returns true if one or more apps are selected",
            "itemtype": "method",
            "name": "areAnyAppsSelected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 91,
            "description": "Adds or removes an application from the list of apps to open\n\nIf the application was in the list previoulsy, it is removed. Otherwise,\nit is added",
            "itemtype": "method",
            "name": "updateSelectedApps",
            "params": [
                {
                    "name": "app",
                    "description": "application to add or remove from the list"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 112,
            "description": "Returns true if the given app is in the list to be added, false\notherwise",
            "itemtype": "method",
            "name": "isAppSelected",
            "params": [
                {
                    "name": "app",
                    "description": "the application to check"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 129,
            "description": "Handler invoked when dialog is closed via Open button",
            "itemtype": "method",
            "name": "openApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 141,
            "description": "Handler invoked when dialog is closed via Open apps in new dashboard\nbutton",
            "itemtype": "method",
            "name": "openAppsInNewDashboard",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/addApplicationsModal/addApplications.js",
            "line": 154,
            "description": "Handler invoked when modal is dismissed via the cancel button",
            "itemtype": "method",
            "name": "cancel",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.addApplicationsModal"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 67,
            "itemtype": "property",
            "name": "dashboards Dashboards for current user",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 73,
            "itemtype": "property",
            "name": "currentDashboard Current active dashboard",
            "type": "{string}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 79,
            "itemtype": "property",
            "name": "$scope.frames Frames on current dashboard (includes marketplace\n data like app name, icons, description, etc)",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 86,
            "itemtype": "property",
            "name": "$scope.myPinnedApps Applications in current dashboard that are\n shown in the application toolbar",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 93,
            "itemtype": "property",
            "name": "$scope.apps All applications available in the marketplace",
            "type": "{Array}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 99,
            "itemtype": "property",
            "name": "dashboardNameLength Max length of dashboard name, based on\ncurrent screen size",
            "type": "{String}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 106,
            "itemtype": "property",
            "name": "$scope.maxAppsDisplayed The maximum number of apps that can be\ndisplayed on the toolbar (based on screen width)",
            "type": "{Number}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 113,
            "itemtype": "property",
            "name": "$scope.fullScreenMode Flag indicating if the toolbar is hidden or\n not",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 120,
            "itemtype": "property",
            "name": "$scope.myPinnedAppsFirstDisplayedIndex The index (in\n $scope.myPinnedApps) of the first application shown in the application\n toolbar to display",
            "type": "{number}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 127,
            "itemtype": "property",
            "name": "$scope.nextAppsVisible Flag for the 'pagination' next arrow\n in the toolbar",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 133,
            "itemtype": "property",
            "name": "$scope.previousAppsVisible Flag for the 'pagination' previous\n arrow in the toolbar",
            "type": "{boolean}",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 190,
            "description": "Handle the deviceSizeChangedEvent\n\nUpdate $scope.maxAppsDisplayed and invoke $scope.setPinnedApps()",
            "itemtype": "method",
            "name": "handleWindowSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "Data from deviceSizeChangedEvent"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 218,
            "description": "Handle state change",
            "itemtype": "method",
            "name": "handleStateChange",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 257,
            "description": "Load a dashboard",
            "itemtype": "method",
            "name": "loadDashboard",
            "params": [
                {
                    "name": "board",
                    "description": "Dashboard to load"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 271,
            "description": "Set $scope.myPinnedApps\n\nRequires that $scope.frames is set first",
            "itemtype": "method",
            "name": "setPinnedApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 296,
            "description": "Update application data in the toolbar (invoked on a dashboard change)",
            "itemtype": "method",
            "name": "updateApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 323,
            "description": "Maximize (or show) a frame that was previously minimized (hidden)",
            "itemtype": "method",
            "name": "maximizeFrame",
            "params": [
                {
                    "name": "e",
                    "description": "The application to maximize/show",
                    "type": "Object"
                }
            ],
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 340,
            "description": "Show or hide the application toolbar\n\nIf successful, broadcasts a fullScreenModeToggleEvent",
            "itemtype": "method",
            "name": "toggleFullScreenMode",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 365,
            "description": "A pagination method to show the previous set of apps currently on the\ndashboard in the toolbar, if the screen width isn't wide enough to\ndisplay them all",
            "itemtype": "method",
            "name": "previousApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 385,
            "description": "A pagination method to show the next set of apps currently on the\ndashboard in the toolbar, if the screen width isn't wide enough to\ndisplay them all",
            "itemtype": "method",
            "name": "nextApps",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 418,
            "description": "Opens the Add Application modal dialog",
            "itemtype": "method",
            "name": "openApplicationsModal",
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 437,
            "description": "Add an application to a dashboard",
            "itemtype": "method",
            "name": "addAppToDashboard",
            "params": [
                {
                    "name": "app",
                    "description": "The application to add"
                },
                {
                    "name": "dashboardId",
                    "description": "The dashboard to add the application to"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/appToolbar/appToolbar.js",
            "line": 506,
            "description": "Edit dashboard",
            "itemtype": "method",
            "name": "openEditDashboardModal",
            "params": [
                {
                    "name": "board",
                    "description": "the changed board object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "appToolbar.ApplicationToolbarCtrl",
            "module": "ozpWebtop.appToolbar",
            "namespace": "appToolbar"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 61,
            "description": "Remove a frame from the current dashboard and send\ndashboardStateChangedEvent",
            "itemtype": "method",
            "name": "removeFrame",
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 73,
            "description": "Hide a frame on the dashboard",
            "itemtype": "method",
            "name": "minimizeFrame",
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/chrome/chrome.js",
            "line": 83,
            "description": "Show a frame on the dashboard",
            "itemtype": "method",
            "name": "maximizeFrame",
            "class": "dashboardView.ChromeCtrl",
            "module": "ozpWebtop.dashboardView.chrome",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 40,
            "itemtype": "property",
            "name": "dashboards User's dashboards",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 46,
            "itemtype": "property",
            "name": "frames Frames on the dashboard (widget instances)",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 52,
            "itemtype": "property",
            "name": "fullScreenMode Flag indicating whether the toolbars are hidden",
            "type": "{boolean}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 58,
            "itemtype": "property",
            "name": "apps Applications in the marketplace",
            "type": "{Array}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 64,
            "itemtype": "property",
            "name": "currentDashboard Active dashboard",
            "type": "{string}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 70,
            "itemtype": "property",
            "name": "currentDashboardId Active dashboard id",
            "type": "{string}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 76,
            "itemtype": "property",
            "name": "max TODO define this",
            "type": "{{}}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 82,
            "itemtype": "property",
            "name": "initialization flag",
            "type": "{boolean}",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 164,
            "description": "Handler invoked when a dashboardStateChangedEvent is received",
            "itemtype": "method",
            "name": "dashboardChangeHandler",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 251,
            "description": "Reload this dashboard",
            "itemtype": "method",
            "name": "reloadDashboard",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 295,
            "description": "Getter for frame.isMinimized",
            "itemtype": "method",
            "name": "isFrameMinimized",
            "params": [
                {
                    "name": "e",
                    "description": "Frame to get data for"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/desktop/desktop.js",
            "line": 310,
            "description": "Sort the zIndex of all frames",
            "itemtype": "method",
            "name": "sortFrames",
            "class": "dashboardView.DesktopCtrl",
            "module": "ozpWebtop.dashboardView.desktop",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 54,
            "itemtype": "property",
            "name": "deviceSize Current screen size (xs, sm, md, lg)",
            "type": "{string}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 60,
            "itemtype": "property",
            "name": "frames Frames (widgets/apps) on the current dashboard",
            "type": "{Array}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 66,
            "itemtype": "property",
            "name": "apps Applications in the marketplace",
            "type": "{Array}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 72,
            "itemtype": "property",
            "name": "fullScreenMode Flag for full screen mode",
            "type": "{boolean}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 78,
            "itemtype": "property",
            "name": "dashboard Current dashboard",
            "type": "{{}}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 84,
            "itemtype": "property",
            "name": "dashboardId Current dashboardId\nTODO: duplicate info?",
            "type": "{string}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 91,
            "itemtype": "property",
            "name": "intervalPromise promise returned by $interval (keep track of it\nso it can be canceled)",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 99,
            "itemtype": "property",
            "name": "gridOptions Configuration options for Gridster\nTODO: make these available to other components somehow",
            "type": "{Object}",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 302,
            "description": "Handle start event resizing a widget on Gridster",
            "itemtype": "method",
            "name": "handleGridsterResizeStart",
            "params": [
                {
                    "name": "uiWidget",
                    "description": "Gridster widget"
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 315,
            "description": "Handle stop event when resizing Gridster widget",
            "itemtype": "method",
            "name": "handleGridsterResizeStop",
            "params": [
                {
                    "name": "uiWidget",
                    "description": ""
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 327,
            "description": "Handler for windowSizeChangedEvent (each time the window size\nchanges, even by a single pixel)\n\nCancels the existing $interval promise and creates a new one to update\nall frames in 200ms",
            "itemtype": "method",
            "name": "handleWindowSizeChange",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 341,
            "description": "Handles the deviceSizeChangedEvent, which occurs whenever the\nscreen size changes device sizes (as defined by Bootstrap)",
            "itemtype": "method",
            "name": "handleDeviceSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "value.deviceSize is one of 'xs', 'sm', 'md', or\n'lg'",
                    "type": "Object"
                }
            ],
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 365,
            "description": "Handle the dashboardStateChangedEvent",
            "itemtype": "method",
            "name": "handleDashboardChange",
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 446,
            "description": "Reloads the current dashboard",
            "itemtype": "method",
            "name": "reloadDashboard",
            "return": {
                "description": "true if dashboard was found"
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 468,
            "description": "Update a single frame after a change (move or resize) has occurred",
            "itemtype": "method",
            "name": "updateFrameAfterChange",
            "params": [
                {
                    "name": "frame",
                    "description": "The frame to update",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "frame id that was updated",
                "type": "String"
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 485,
            "description": "Update all frames after the user finishes moving or resizing a frame",
            "itemtype": "method",
            "name": "updateAllFramesAfterChange",
            "return": {
                "description": ""
            },
            "class": "dashboardView.GridCtrl",
            "module": "ozpWebtop.dashboardView.grid",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/editDashboardModal/editDashboard.js",
            "line": 15,
            "description": "Controller for Edit Dashboard modal",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$modalInstance",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.editDashboardModal"
        },
        {
            "file": "src/app/editDashboardModal/editDashboard.js",
            "line": 43,
            "description": "Handler invoked when dialog Create Dashboard is selected",
            "itemtype": "method",
            "name": "createDashboard",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.editDashboardModal"
        },
        {
            "file": "src/app/editDashboardModal/editDashboard.js",
            "line": 58,
            "description": "Handler invoked when dialog is closed via Ok button",
            "itemtype": "method",
            "name": "openApps",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.editDashboardModal"
        },
        {
            "file": "src/app/editDashboardModal/editDashboard.js",
            "line": 76,
            "description": "Handler invoked when modal is dismissed via the cancel button",
            "itemtype": "method",
            "name": "cancel",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.editDashboardModal"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 43,
            "itemtype": "property",
            "name": "usernameLength Max length of username, based on\ncurrent screen size",
            "type": "{Number}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 50,
            "itemtype": "property",
            "name": "fullScreenMode Flag indicating if toolbar should be hidden",
            "type": "{boolean}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 56,
            "itemtype": "property",
            "name": "user Current user's username",
            "type": "{string}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 62,
            "itemtype": "property",
            "name": "messages Messages for current user TBD",
            "type": "{Array}",
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 108,
            "description": "Handler invoked when window size changes across device size boundaries\nas defined by Bootstrap",
            "itemtype": "method",
            "name": "handleDeviceSizeChange",
            "params": [
                {
                    "name": "value",
                    "description": "value.deviceSize is one of 'xs', 'sm', 'md', or 'lg'"
                }
            ],
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/ozpToolbar/ozpToolbar.js",
            "line": 130,
            "itemtype": "method",
            "name": "opensettingsModal",
            "params": [
                {
                    "name": "board",
                    "description": "the changed board object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "ozpToolbar.OzpToolbarCtrl",
            "module": "ozpWebtop.ozpToolbar",
            "namespace": "ozpToolbar"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 31,
            "description": "Get resource from IWC bus",
            "params": [
                {
                    "name": "dst",
                    "description": "IWC destination like data.api"
                },
                {
                    "name": "resource",
                    "description": "IWC resource to get"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 50,
            "description": "Set resource on IWC bus",
            "params": [
                {
                    "name": "dst",
                    "description": "IWC destination like data.api"
                },
                {
                    "name": "resource",
                    "description": "IWC resource to set"
                },
                {
                    "name": "setData",
                    "description": "Value of resource"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 89,
            "description": "Get all webtop data\n\nUse IWC to retrieve all webtop data from the backend",
            "itemtype": "method",
            "name": "getWebtopData",
            "return": {
                "description": "(true if success, false otherwise)",
                "type": "Promise"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 101,
            "description": "Set all webtop data\n\nUse IWC to set all webtop data in the backend\n\nIf another set request is already processing, this method will simply\nreturn. Even if the request does go through, it will return immediately\nand ignore the response - this is by design.",
            "itemtype": "method",
            "name": "setWebtopData",
            "params": [
                {
                    "name": "webtopData",
                    "description": ""
                }
            ],
            "return": {
                "description": "true if request was made, false otherwise"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/iwcInterface.js",
            "line": 122,
            "description": "Get all Listings (applications/widgets) for user\n\nNote that this currently uses a request per application! Hopefully IWC\nwill someday support bulk GET requests so that this can be made much\nmore efficient",
            "itemtype": "method",
            "name": "getListings",
            "return": {
                "description": "(null if not found or error)",
                "type": "Promise"
            },
            "class": "services.iwcInterface",
            "module": "ozpWebtop.services.iwcInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/restInterface.js",
            "line": 34,
            "description": "Set all webtop data\n\nThis method uses HTTP requests directly on the api/profile/self/data\nendpoint intented for use exclusively by IWC\n\nIf another PUT request is already processing, this method will simply\nreturn. Even if the request does go through, it will return immediately\nand ignore the response - this is by design.",
            "itemtype": "method",
            "name": "setWebtopData",
            "return": {
                "description": "true if request was made, false otherwise"
            },
            "class": "services.restInterface",
            "module": "ozpWebtop.services.restInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/restInterface.js",
            "line": 75,
            "description": "Get all webtop data\n\nThis method uses HTTP requests directly on the api/profile/self/data\nendpoint intented for use exclusively by IWC",
            "itemtype": "method",
            "name": "getWebtopData",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "services.restInterface",
            "module": "ozpWebtop.services.restInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/services/restInterface.js",
            "line": 108,
            "description": "Get all Listings (applications/widgets) for user",
            "itemtype": "method",
            "name": "getListings",
            "return": {
                "description": "(null if not found or error)",
                "type": "Promise"
            },
            "class": "services.restInterface",
            "module": "ozpWebtop.services.restInterface",
            "namespace": "services"
        },
        {
            "file": "src/app/settingsModal/settingsModal.js",
            "line": 11,
            "description": "Controller for settings modal",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$modalInstance",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "urlWidgetLauncher.UrlWidgetLauncherCtrl",
            "module": "ozpWebtop.settingsModal"
        },
        {
            "file": "src/app/settingsModal/settingsModal.js",
            "line": 26,
            "description": "Handler invoked when dialog is closed via Ok button\n\nTODO @method for ok button",
            "class": "urlWidgetLauncher.UrlWidgetLauncherCtrl",
            "module": "ozpWebtop.settingsModal"
        },
        {
            "file": "src/app/settingsModal/settingsModal.js",
            "line": 35,
            "description": "Handler invoked when modal is dismissed via the cancel button",
            "itemtype": "method",
            "name": "cancel",
            "class": "urlWidgetLauncher.UrlWidgetLauncherCtrl",
            "module": "ozpWebtop.settingsModal"
        },
        {
            "file": "src/app/constants.js",
            "line": 19,
            "description": "Flag to use IWC",
            "itemtype": "property",
            "name": "useIwc",
            "type": "Boolean",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 27,
            "description": "Number of sticky dashboard slots (for each grid and desktop layouts)",
            "itemtype": "property",
            "name": "maxStickyBoards",
            "type": "Integer",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 38,
            "description": "Event fired when the window size changes across device size boundaries as\ndefined by Bootstrap (xs, sm, md, lg)",
            "itemtype": "property",
            "name": "deviceSizeChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 47,
            "description": "Event fired when the window size changes by 1px or more",
            "itemtype": "property",
            "name": "windowSizeChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 55,
            "description": "Event fired when the state of the active dashboard changes (frames are\nadded or removed, shown or hidden, etc)",
            "itemtype": "property",
            "name": "dashboardStateChangedEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 64,
            "description": "Event fired when full-screen mode is changed",
            "itemtype": "property",
            "name": "fullScreenChangeEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 72,
            "description": "Event fired when app icon is clicked in the app toolbar in grid layout",
            "itemtype": "property",
            "name": "highlightFrameOnGridLayoutEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 79,
            "description": "Event fired when a dashboard is closed to remove its frames.",
            "itemtype": "property",
            "name": "removeFrameOnDeleteEvent",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/constants.js",
            "line": 87,
            "description": "Event fired when app and dashboard data is initially retrieved",
            "itemtype": "property",
            "name": "initialDataReceived",
            "type": "String",
            "class": "constants",
            "module": "ozpWebtop.constants"
        },
        {
            "file": "src/app/models.js",
            "line": 41,
            "description": "Set all webtop data",
            "itemtype": "method",
            "name": "setWebtopData",
            "params": [
                {
                    "name": "webtopData",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 61,
            "description": "Transform the raw Listing data into a format used for webtop\n\nTODO: At some point it would be nice to eliminate this...",
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 83,
            "description": "Get application data",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 90,
            "description": "Set the initial dashboard-data\n\nThis should be invoked at application startup, after the webtop data\nis retrieved from the server",
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 132,
            "description": "Get all webtop data",
            "itemtype": "method",
            "name": "getWebtopData",
            "return": {
                "description": "webtop data"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 141,
            "description": "Check that we have received Listing and Webtop data",
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 151,
            "description": "Get all dashboards",
            "itemtype": "method",
            "name": "getDashboards",
            "return": {
                "description": "dashboards"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 166,
            "description": "Set all dashboards",
            "itemtype": "method",
            "name": "setAllDashboards",
            "params": [
                {
                    "name": "dashboards",
                    "description": ""
                }
            ],
            "return": {
                "description": "true on success"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 178,
            "description": "Update dashboard layout",
            "itemtype": "method",
            "name": "updateLayoutType",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "layout",
                    "description": "'grid' or 'desktop'"
                }
            ],
            "return": {
                "description": "updated dashboard"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 196,
            "description": "Toggle the value of a key in a frame",
            "itemtype": "method",
            "name": "toggleFrameKey",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 221,
            "description": "Update the grid layout of a frame in a dashboard",
            "itemtype": "method",
            "name": "updateGridFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "sizeData",
                    "description": ""
                }
            ],
            "return": {
                "description": "frameId if update succeeded"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 247,
            "description": "Update the desktop layout of a frame in a dashboard\nTODO: what about width and height?",
            "itemtype": "method",
            "name": "updateDesktopFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                },
                {
                    "name": "zIndex",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 274,
            "description": "Check to see if an application is already on a given dashboard",
            "itemtype": "method",
            "name": "isAppOnDashboard",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "applicationId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 290,
            "description": "Create a new frame in a dashboard for a given application\nCreates a frame with with both grid and desktop layout data",
            "itemtype": "method",
            "name": "createFrame",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                },
                {
                    "name": "appId",
                    "description": ""
                },
                {
                    "name": "gridMaxRows",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "New frame"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 392,
            "description": "Remove a frame from a dashboard",
            "itemtype": "method",
            "name": "removeFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 414,
            "description": "Change the user's current dashboard",
            "itemtype": "method",
            "name": "updateDashboard",
            "params": [
                {
                    "name": "updatedDashboardData",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 437,
            "description": "Return the name of the user's current dashboard",
            "itemtype": "method",
            "name": "getCurrentDashboardName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 452,
            "description": "Augment the dashboard.frames data with application-specific data\nNote: data is not persisted, but rather the 'frames' object is modified\nby reference",
            "itemtype": "method",
            "name": "mergeApplicationData",
            "params": [
                {
                    "name": "frames",
                    "description": ""
                },
                {
                    "name": "marketplaceApps",
                    "description": ""
                }
            ],
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 491,
            "description": "Save a dashboard\nTODO: make sure input is a valid dashboard:\n- dashboard.id should be unique\n- all frame.id's should be",
            "itemtype": "method",
            "name": "saveDashboard",
            "params": [
                {
                    "name": "dashboard",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 515,
            "description": "Save a frame in a dashboard\nTODO: make sure input is a valid frame",
            "itemtype": "method",
            "name": "saveFrame",
            "params": [
                {
                    "name": "frame",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 542,
            "description": "Retrieve a frame by id",
            "itemtype": "method",
            "name": "getFrameById",
            "params": [
                {
                    "name": "frameId",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 559,
            "description": "Retrieve a dashboard by id",
            "itemtype": "method",
            "name": "getDashboardById",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 577,
            "description": "Delete a dashboard",
            "itemtype": "method",
            "name": "removeDashboard",
            "params": [
                {
                    "name": "dashboardId",
                    "description": ""
                }
            ],
            "return": {
                "description": "true if dashboard was found and removed, false otherwise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 601,
            "description": "Create a new dashboard",
            "itemtype": "method",
            "name": "createDashboard",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 628,
            "description": "Get the next available id for a new dashboard\nTODO: this assumes ids are integers and not uuids",
            "itemtype": "method",
            "name": "getNewDashboardId",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 654,
            "description": "Get the next available sticky slot for a new dashboard",
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 686,
            "description": "Get the user's current dashboard",
            "itemtype": "method",
            "name": "getCurrentDashboard",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 722,
            "description": "Get all user settings for the current user",
            "itemtype": "method",
            "name": "getUserSettings",
            "return": {
                "description": "All user settings for the current user",
                "type": "*"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 731,
            "description": "Update all settings for the current user",
            "itemtype": "method",
            "name": "updateAllUserSettings",
            "params": [
                {
                    "name": "userSettings",
                    "description": "All user settings for current user",
                    "type": "Obj"
                }
            ],
            "return": {
                "description": "True if updated successfully, false on error",
                "type": "Boolean"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/app/models.js",
            "line": 743,
            "description": "Update a specific setting for the current user",
            "itemtype": "method",
            "name": "updateUserSettingsByKey",
            "params": [
                {
                    "name": "key",
                    "description": "Name of user setting to update",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of setting",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if updated successfully, false on error",
                "type": "Boolean"
            },
            "class": "models.models",
            "module": "ozpWebtop.models",
            "namespace": "models"
        },
        {
            "file": "src/common/ellipticalFilter/elliptical.js",
            "line": 24,
            "description": "Truncate a string of text and add an ellipsis",
            "itemtype": "method",
            "name": "elliptical",
            "params": [
                {
                    "name": "text",
                    "description": "a string of text",
                    "type": "String"
                },
                {
                    "name": "ellipOption",
                    "description": "a flag if an ellipsis is desired",
                    "type": "Boolean"
                },
                {
                    "name": "maxLength",
                    "description": "the maximum length the string can be",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "truncated input, optionally with an ellipsis",
                "type": "String"
            },
            "class": "ozp.common.elliptical",
            "module": "ozp.common.ellipticalFilter",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/iwcConnectedClient/iwcConnectedClient.js",
            "line": 35,
            "description": "Get a connected OZP client",
            "itemtype": "method",
            "name": "getClient",
            "return": {
                "description": "fulfilled value is a connected OZP client",
                "type": "Promise"
            },
            "class": "ozp.common.iwc.iwcConnectedClient",
            "module": "ozp.common.iwc.client",
            "namespace": "ozp.common.iwc"
        },
        {
            "file": "src/common/utilities/utilities.js",
            "line": 25,
            "description": "Generate a uuid as per http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript",
            "itemtype": "method",
            "name": "generateUuid",
            "return": {
                "description": "A randomly generated UUID in form 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'",
                "type": "String"
            },
            "class": "ozp.common.Utilities",
            "module": "ozp.common.utilities",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/utilities/utilities.js",
            "line": 40,
            "description": "Eliminate duplicate values from an array",
            "itemtype": "method",
            "name": "eliminateDuplicates",
            "params": [
                {
                    "name": "arr",
                    "description": "An array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Input array with duplicates removed",
                "type": "Array"
            },
            "class": "ozp.common.Utilities",
            "module": "ozp.common.utilities",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/utilities/utilities.js",
            "line": 61,
            "description": "Add, update, or remove a query parameter from a url\nhttp://stackoverflow.com/questions/5999118/add-or-update-query-string-parameter",
            "class": "ozp.common.Utilities",
            "module": "ozp.common.utilities",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 58,
            "description": "Activate the windowSizeWatcher",
            "itemtype": "method",
            "name": "run",
            "class": "ozp.common.windowSizeWatcher",
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common"
        },
        {
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 71,
            "description": "Get the current device size",
            "itemtype": "method",
            "name": "getCurrentSize",
            "return": {
                "description": "device size, one of xs, sm, md, or lg",
                "type": "String"
            },
            "class": "ozp.common.windowSizeWatcher",
            "module": "ozp.common.windowSizeWatcher",
            "namespace": "ozp.common"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:81"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/addApplicationsModal/addApplications.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/appToolbar/appToolbar.js:437"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/appToolbar/appToolbar.js:506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/desktop/desktop.js:295"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:446"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:468"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:485"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/ozpToolbar/ozpToolbar.js:130"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/iwcInterface.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/restInterface.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/restInterface.js:75"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/services/restInterface.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:83"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:166"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:178"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:196"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:221"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:247"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:274"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:392"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:414"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:437"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:491"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:515"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:542"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:559"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:577"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:601"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:628"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:686"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:722"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:731"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/models.js:743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/iwcConnectedClient/iwcConnectedClient.js:35"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/utilities/utilities.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/utilities/utilities.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/windowSizeWatcher/windowSizeWatcher.js:71"
        },
        {
            "message": "Missing item type\nController for Add Applications modal",
            "line": " src/app/addApplicationsModal/addApplications.js:14"
        },
        {
            "message": "Missing item type\nController for Edit Dashboard modal",
            "line": " src/app/editDashboardModal/editDashboard.js:15"
        },
        {
            "message": "Missing item type\nGet resource from IWC bus",
            "line": " src/app/services/iwcInterface.js:31"
        },
        {
            "message": "Missing item type\nSet resource on IWC bus",
            "line": " src/app/services/iwcInterface.js:50"
        },
        {
            "message": "Missing item type\nController for settings modal",
            "line": " src/app/settingsModal/settingsModal.js:11"
        },
        {
            "message": "Missing item type\nHandler invoked when dialog is closed via Ok button\n\nTODO @method for ok button",
            "line": " src/app/settingsModal/settingsModal.js:26"
        },
        {
            "message": "Missing item type\nTransform the raw Listing data into a format used for webtop\n\nTODO: At some point it would be nice to eliminate this...",
            "line": " src/app/models.js:61"
        },
        {
            "message": "Missing item type\nGet application data",
            "line": " src/app/models.js:83"
        },
        {
            "message": "Missing item type\nSet the initial dashboard-data\n\nThis should be invoked at application startup, after the webtop data\nis retrieved from the server",
            "line": " src/app/models.js:90"
        },
        {
            "message": "Missing item type\nCheck that we have received Listing and Webtop data",
            "line": " src/app/models.js:141"
        },
        {
            "message": "Missing item type\nGet the next available sticky slot for a new dashboard",
            "line": " src/app/models.js:654"
        },
        {
            "message": "Missing item type\nAdd, update, or remove a query parameter from a url\nhttp://stackoverflow.com/questions/5999118/add-or-update-query-string-parameter",
            "line": " src/common/utilities/utilities.js:61"
        }
    ]
}