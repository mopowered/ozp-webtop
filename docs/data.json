{
    "project": {
        "name": "ozpwebtop",
        "description": "",
        "version": "0.1.0",
        "url": "https://github.com/ozone-development/ozp-webtop"
    },
    "files": {
        "src/app/components/button/ozpbutton.js": {
            "name": "src/app/components/button/ozpbutton.js",
            "modules": {},
            "classes": {
                "components.ozpButton": 1
            },
            "fors": {},
            "namespaces": {
                "components": 1
            }
        },
        "src/app/components/chrome/chromecontroller.js": {
            "name": "src/app/components/chrome/chromecontroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/dashboardView/desktop/frames/ozpmanagedframe.js": {
            "name": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "modules": {},
            "classes": {
                "dashboardView.ozpManagedFrame": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/grid/grid.js": {
            "name": "src/app/dashboardView/grid/grid.js",
            "modules": {},
            "classes": {
                "dashboardView.GridCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/grid/gridsteritem.js": {
            "name": "src/app/dashboardView/grid/gridsteritem.js",
            "modules": {},
            "classes": {
                "dashboardView.ozpGridsterItem": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/dashboardView/iframe.js": {
            "name": "src/app/dashboardView/iframe.js",
            "modules": {},
            "classes": {
                "dashboardView.IframeCtrl": 1
            },
            "fors": {},
            "namespaces": {
                "dashboardView": 1
            }
        },
        "src/app/general/services/compareurl.js": {
            "name": "src/app/general/services/compareurl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "ozpWebtopApp.general": 1
            }
        },
        "src/app/general/services/dashboardChangeMonitor.js": {
            "name": "src/app/general/services/dashboardChangeMonitor.js",
            "modules": {},
            "classes": {
                "general.dashboardChangeMonitor": 1
            },
            "fors": {},
            "namespaces": {
                "general": 1
            }
        },
        "src/app/general/services/dashboardapi.js": {
            "name": "src/app/general/services/dashboardapi.js",
            "modules": {},
            "classes": {
                "apis.localStorageDashboardApiImpl": 1,
                "apis.iwcDashboardApiImpl": 1,
                "apis.dashboardApi": 1
            },
            "fors": {},
            "namespaces": {
                "apis": 1
            }
        },
        "src/app/general/services/localstorage.js": {
            "name": "src/app/general/services/localstorage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "general": 1
            }
        },
        "src/app/general/services/marketplaceApi.js": {
            "name": "src/app/general/services/marketplaceApi.js",
            "modules": {},
            "classes": {
                "apis.marketplaceApi": 1
            },
            "fors": {},
            "namespaces": {
                "apis": 1
            }
        },
        "src/app/general/services/userSettingsApi.js": {
            "name": "src/app/general/services/userSettingsApi.js",
            "modules": {},
            "classes": {
                "apis.userSettingsApi": 1
            },
            "fors": {},
            "namespaces": {
                "apis": 1
            }
        },
        "src/app/general/services/utilities.js": {
            "name": "src/app/general/services/utilities.js",
            "modules": {},
            "classes": {
                "general.Utiliites": 1
            },
            "fors": {},
            "namespaces": {
                "general": 1
            }
        },
        "src/app/general/elliptical.js": {
            "name": "src/app/general/elliptical.js",
            "modules": {},
            "classes": {
                "general.elliptical": 1
            },
            "fors": {},
            "namespaces": {
                "general": 1
            }
        },
        "src/app/app.js": {
            "name": "src/app/app.js",
            "modules": {
                "ozpWebtopApp": 1,
                "ozp.common": 1,
                "ozpWebtopApp.constants": 1,
                "ozpWebtopApp.ozpIwcClient": 1,
                "ozpWebtopApp.general": 1,
                "ozpWebtopApp.apis": 1,
                "ozpWebtopApp.userSettings": 1,
                "ozpWebtopApp.components": 1,
                "ozpWebtopApp.appLauncher": 1,
                "ozpWebtopApp.dashboardToolbar": 1,
                "ozpWebtopApp.appToolbar": 1,
                "ozpWebtopApp.dashboardView": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/common/windowSizeWatcher/windowSizeWatcher.js": {
            "name": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            }
        }
    },
    "modules": {
        "ozpWebtopApp": {
            "name": "ozpWebtopApp",
            "submodules": {},
            "classes": {
                "components.ozpButton": 1,
                "dashboardView.ozpManagedFrame": 1,
                "dashboardView.GridCtrl": 1,
                "dashboardView.ozpGridsterItem": 1,
                "dashboardView.IframeCtrl": 1,
                "general.dashboardChangeMonitor": 1,
                "apis.localStorageDashboardApiImpl": 1,
                "apis.iwcDashboardApiImpl": 1,
                "apis.dashboardApi": 1,
                "apis.marketplaceApi": 1,
                "apis.userSettingsApi": 1,
                "general.Utiliites": 1,
                "general.elliptical": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/general/elliptical.js",
            "line": 3,
            "description": "Top level module of the Webtop. When declared in an HTML file, it bootstraps\nthe Webtop.",
            "example": [
                " \n    <body ng-app=\"ozpWebtopApp\"> ... </body>"
            ],
            "requires": [
                "ozp.common",
                "ozpWebtopApp.constants",
                "ozpWebtopApp.general",
                "ozpWebtopApp.ozpIwcClient",
                "ozpWebtopApp.apis",
                "ozpWebtopApp.appLauncher",
                "ozpWebtopApp.components",
                "ozpWebtopApp.appToolbar",
                "ozpWebtopApp.dashboardToolbar",
                "ozpWebtopApp.dashboardView",
                "ozpWebtopApp.userSettings",
                "ui.router",
                "ui.bootstrap",
                "gridster",
                "ozpIwcClient",
                "ozpClassification"
            ]
        },
        "ozp.common": {
            "name": "ozp.common",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 90,
            "description": "Common services"
        },
        "ozpWebtopApp.constants": {
            "name": "ozpWebtopApp.constants",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 97,
            "description": "Constants used throughout the application"
        },
        "ozpWebtopApp.ozpIwcClient": {
            "name": "ozpWebtopApp.ozpIwcClient",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 104,
            "description": "Provides an OZP IWC client using a Promises to indicate valid connection",
            "requires": [
                "ozpIwcClient",
                "ozpWebtopApp.constants"
            ]
        },
        "ozpWebtopApp.general": {
            "name": "ozpWebtopApp.general",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 114,
            "description": "General utilities for use in Webtop. Includes some services and other fairly\ngeneric capabilities.",
            "requires": [
                "ozpWebtopApp.constants"
            ]
        },
        "ozpWebtopApp.apis": {
            "name": "ozpWebtopApp.apis",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 123,
            "description": "APIs retrieve and send data to places external to the Webtop.",
            "requires": [
                "ozpWebtopApp.general"
            ]
        },
        "ozpWebtopApp.userSettings": {
            "name": "ozpWebtopApp.userSettings",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 132,
            "description": "The modal encompassing user settings functionality.",
            "requires": [
                "ozpWebtopApp.apis"
            ]
        },
        "ozpWebtopApp.components": {
            "name": "ozpWebtopApp.components",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 140,
            "description": "Reusable components for the Webtop."
        },
        "ozpWebtopApp.appLauncher": {
            "name": "ozpWebtopApp.appLauncher",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 147,
            "description": "Launches apps from other sources"
        },
        "ozpWebtopApp.dashboardToolbar": {
            "name": "ozpWebtopApp.dashboardToolbar",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 154,
            "description": "The dashboard toolbar component shown in the Webtop.",
            "requires": [
                "ozp.common",
                "ozpWebtopApp.apis"
            ]
        },
        "ozpWebtopApp.appToolbar": {
            "name": "ozpWebtopApp.appToolbar",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/app/app.js",
            "line": 163,
            "description": "The application toolbar in the Webtop.",
            "requires": [
                "ui.router",
                "ozpWebtopApp.apis"
            ]
        },
        "ozpWebtopApp.dashboardView": {
            "name": "ozpWebtopApp.dashboardView",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "ozp.common": 1
            },
            "tag": "module",
            "file": "src/app/app.js",
            "line": 172,
            "description": "The dashboard view in the Webtop. Contains the area where a user uses their applications/widgets.",
            "requires": [
                "ozpWebtopApp.apis"
            ]
        }
    },
    "classes": {
        "components.ozpButton": {
            "name": "components.ozpButton",
            "shortname": "components.ozpButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "components",
            "file": "src/app/components/button/ozpbutton.js",
            "line": 3,
            "description": "ozpButton Renders button with an icon to the left and text to the right.",
            "is_constructor": 1
        },
        "dashboardView.ozpManagedFrame": {
            "name": "dashboardView.ozpManagedFrame",
            "shortname": "dashboardView.ozpManagedFrame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "line": 3,
            "description": "Used to include an html document in the webtop. If the html in question is from a different \norigin than the webtop, then an iframe will be used. If the html is from the same origin as\nthe webtop, a \"frame\" (div) will be used.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "compareUrl",
                    "description": "the URL comparison service",
                    "type": "Function"
                },
                {
                    "name": "$http",
                    "description": "the Angular HTTP service",
                    "type": "Object"
                },
                {
                    "name": "$compile",
                    "description": "the Angular compile service",
                    "type": "Object"
                },
                {
                    "name": "$document",
                    "description": "the Angular document service",
                    "type": "Object"
                },
                {
                    "name": "dashboardApi",
                    "description": "the API for dashboard information {{#crossLink \"dashboardApi\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ]
        },
        "dashboardView.GridCtrl": {
            "name": "dashboardView.GridCtrl",
            "shortname": "dashboardView.GridCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 3,
            "description": "GridCtrl retrieves the state of a number of tiles and binds it to an\nAngular scope.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "an Angular scope",
                    "type": "Object"
                },
                {
                    "name": "$rootScope",
                    "description": "the Angular root scope",
                    "type": "Object"
                },
                {
                    "name": "$location",
                    "description": "the Angular location service",
                    "type": "Object"
                },
                {
                    "name": "dashboardApi",
                    "description": "the API for dashboard information",
                    "type": "Object"
                },
                {
                    "name": "marketplaceApi",
                    "description": "the API for marketplace application information",
                    "type": "Object"
                },
                {
                    "name": "dashboardChangeMonitor",
                    "description": "the service that monitors dashboard changes",
                    "type": "Object"
                }
            ]
        },
        "dashboardView.ozpGridsterItem": {
            "name": "dashboardView.ozpGridsterItem",
            "shortname": "dashboardView.ozpGridsterItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/grid/gridsteritem.js",
            "line": 3,
            "description": "ozpGridsterItem is a Angular directive and a wrapper around a tile in the grid",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$compile",
                    "description": "the Angular compile service",
                    "type": "Object"
                },
                {
                    "name": "$http",
                    "description": "the Angular HTTP service",
                    "type": "Object"
                },
                {
                    "name": "$templateCache",
                    "description": "the Angular template cache",
                    "type": "Object"
                },
                {
                    "name": "$timeout",
                    "description": "the Angular timeout service",
                    "type": "Object"
                },
                {
                    "name": "compareUrl",
                    "description": "the compareUrl service {{#crossLink \"compareUrl\"}}{{/crossLink}}",
                    "type": "Function"
                },
                {
                    "name": "dashboardApi",
                    "description": "the dashboard API service {{#crossLink \"dashboardApi\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ]
        },
        "dashboardView.IframeCtrl": {
            "name": "dashboardView.IframeCtrl",
            "shortname": "dashboardView.IframeCtrl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "dashboardView",
            "file": "src/app/dashboardView/iframe.js",
            "line": 3,
            "description": "IframeCtrl ensures that a widget can be properly displayed in an iframe.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$scope",
                    "description": "An Angular scope"
                },
                {
                    "name": "$sce",
                    "description": "The Angular service for Strict Contextual Escaping - [API Docs](https://docs.angularjs.org/api/ng/service/$sce)"
                }
            ]
        },
        "general.dashboardChangeMonitor": {
            "name": "general.dashboardChangeMonitor",
            "shortname": "general.dashboardChangeMonitor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "general",
            "file": "src/app/general/services/dashboardChangeMonitor.js",
            "line": 3,
            "description": "Broadcast messages down $rootScope when the current dashboard or dashboard\nlayout changes",
            "is_constructor": 1
        },
        "apis.localStorageDashboardApiImpl": {
            "name": "apis.localStorageDashboardApiImpl",
            "shortname": "apis.localStorageDashboardApiImpl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "apis",
            "file": "src/app/general/services/dashboardapi.js",
            "line": 871,
            "description": "Angular service which provides a local storage interface to the dashboard api.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$http",
                    "description": "The AngularJS HTTP service",
                    "type": "Object"
                },
                {
                    "name": "LocalStorage",
                    "description": "the local storage service",
                    "type": "Object"
                },
                {
                    "name": "Utilities",
                    "description": "the utilites",
                    "type": "Object"
                }
            ]
        },
        "apis.iwcDashboardApiImpl": {
            "name": "apis.iwcDashboardApiImpl",
            "shortname": "iwcDashboardApiImpl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "apis",
            "file": "src/app/general/services/dashboardapi.js",
            "line": 890,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store and retrieve\ndashboards.",
            "is_constructor": 1
        },
        "apis.dashboardApi": {
            "name": "apis.dashboardApi",
            "shortname": "dashboardApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "apis",
            "file": "src/app/general/services/dashboardapi.js",
            "line": 906,
            "description": "Angular service which provides an abstraction of the implementations used to store and retrieve\ndashboard information.",
            "is_constructor": 1
        },
        "apis.marketplaceApi": {
            "name": "apis.marketplaceApi",
            "shortname": "marketplaceApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "apis",
            "file": "src/app/general/services/marketplaceApi.js",
            "line": 203,
            "description": "Angular service which provides an abstraction of the implementations used to\nstore and retrieve marketplace data",
            "is_constructor": 1
        },
        "apis.userSettingsApi": {
            "name": "apis.userSettingsApi",
            "shortname": "userSettingsApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "apis",
            "file": "src/app/general/services/userSettingsApi.js",
            "line": 78,
            "description": "Angular service which provides an abstraction of the implementations used to\nstore and retrieve user settings information.",
            "is_constructor": 1
        },
        "general.Utiliites": {
            "name": "general.Utiliites",
            "shortname": "general.Utiliites",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "general",
            "file": "src/app/general/services/utilities.js",
            "line": 3,
            "description": "Utility functions",
            "is_constructor": 1
        },
        "general.elliptical": {
            "name": "general.elliptical",
            "shortname": "general.elliptical",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ozpWebtopApp",
            "namespace": "general",
            "file": "src/app/general/elliptical.js",
            "line": 3,
            "description": "An Angular Filter to truncate a string of text and add an ellipsis, if\ndesired by the state",
            "static": 1,
            "params": [
                {
                    "name": "text",
                    "description": "a string of text",
                    "type": "String"
                },
                {
                    "name": "ellipOption",
                    "description": "a flag if an ellipsis is desired",
                    "type": "Boolean"
                },
                {
                    "name": "maxLength",
                    "description": "the maximum length the string can be",
                    "type": "Number",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/app/components/chrome/chromecontroller.js",
            "line": 3,
            "description": "ChromeCtrl aids the ozpChrome directive in knowing its location (grid or desktop).",
            "class": "dashboardView.ozpManagedFrame",
            "namespace": "components"
        },
        {
            "file": "src/app/dashboardView/desktop/frames/ozpmanagedframe.js",
            "line": 45,
            "description": "Decides which template to use.",
            "itemtype": "method",
            "name": "getTemplate",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "sameOrigin",
                    "description": "True if the frame comes from the same origin as the webtop,\n    false otherwise.",
                    "type": "Boolean"
                }
            ],
            "class": "dashboardView.ozpManagedFrame",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 181,
            "description": "Calculates the size of a frame, saves it, and sends a gridSizeChanged\n message",
            "params": [
                {
                    "name": "frameId",
                    "description": "Id of the frame to update",
                    "type": "String"
                }
            ],
            "return": {
                "description": "fulfilled with boolean true if frame was updated\n                    successfully",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 219,
            "description": "Reloads the current dashboard",
            "return": {
                "description": "Promise fulfilled with Boolean, true if dashboard was\n                   found",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 256,
            "description": "Update a single frame after a change (move or resize) has occurred",
            "params": [
                {
                    "name": "frame",
                    "description": "The frame to update",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise fulfilled with the frame id that was updated",
                "type": "Promise"
            },
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 274,
            "description": "Update all frames after the user finishes moving or resizing a frame",
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 353,
            "description": "Calculates the size in pixels for a given frame\nNecessary because the built-in angular-gridster method that calculates a\ngrid tile's size after resizing does not yield the correct results.\n\nNotes:\n hard-coded value of gridster container padding\n accesses $scope.gridOptions",
            "params": [
                {
                    "name": "frame",
                    "description": "The frame for which to calculate size",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "height and width",
                "type": "Object"
            },
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/dashboardView/grid/grid.js",
            "line": 393,
            "description": "Update the widget's pixel size on the grid (this update is local, the\ndata is not persisted to the dashboard api)",
            "params": [
                {
                    "name": "frameId",
                    "description": "The id of the frame for which to update size",
                    "type": "String"
                }
            ],
            "return": {
                "description": "widget size (height and width) and the frame id",
                "type": "Object"
            },
            "class": "dashboardView.GridCtrl",
            "namespace": "dashboardView"
        },
        {
            "file": "src/app/general/services/compareurl.js",
            "line": 3,
            "description": "compareUrl compares the current location of the webtop to a specified frame URL",
            "itemtype": "method",
            "name": "compareUrl",
            "static": 1,
            "params": [
                {
                    "name": "frameUrl",
                    "description": "the url of a frame",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the url represents the same origin as the webtop, false otherwise",
                "type": "Boolean"
            },
            "class": "general.dashboardChangeMonitor",
            "namespace": "ozpWebtopApp.general"
        },
        {
            "file": "src/app/general/services/compareurl.js",
            "line": 38,
            "description": "An internal method to infer the port based on other information provided",
            "itemtype": "method",
            "name": "inferPort",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "an object representing either an anchor tag or the window.location",
                    "type": "Object"
                }
            ],
            "class": "general.dashboardChangeMonitor",
            "namespace": "ozpWebtopApp.general"
        },
        {
            "file": "src/app/general/services/localstorage.js",
            "line": 3,
            "description": "Provides a simpler interface to the browser's localStorage",
            "is_constructor": 1,
            "class": "apis.marketplaceApi",
            "namespace": "general"
        },
        {
            "file": "src/app/general/services/marketplaceApi.js",
            "line": 172,
            "description": "Angular service which provides a local storage interface to the marketplace\napi",
            "is_constructor": 1,
            "class": "apis.marketplaceApi",
            "namespace": "apis"
        },
        {
            "file": "src/app/general/services/marketplaceApi.js",
            "line": 188,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve marketplace data",
            "is_constructor": 1,
            "class": "apis.marketplaceApi",
            "namespace": "apis"
        },
        {
            "file": "src/app/general/services/userSettingsApi.js",
            "line": 48,
            "description": "Angular service which provides a local storage interface to the userSettings api.",
            "is_constructor": 1,
            "class": "apis.userSettingsApi",
            "namespace": "apis"
        },
        {
            "file": "src/app/general/services/userSettingsApi.js",
            "line": 63,
            "description": "Angular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve user settings.",
            "is_constructor": 1,
            "class": "apis.userSettingsApi",
            "namespace": "apis"
        },
        {
            "file": "src/common/windowSizeWatcher/windowSizeWatcher.js",
            "line": 3,
            "description": "windowSizeWatcher sends a message when the window size changes device sizes\nas defined by Bootstrap:\n\n< 768px  = extra-small (xs)\n>= 768px = small (sm)\n>= 992 = medium (md)\n>= 1200 = large (lg)",
            "itemtype": "method",
            "name": "windowSizeWatcher",
            "static": 1,
            "class": "",
            "module": "ozpWebtopApp.dashboardView",
            "namespace": "ozp.common"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:219"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:353"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/app/dashboardView/grid/grid.js:393"
        },
        {
            "message": "Missing item type\nChromeCtrl aids the ozpChrome directive in knowing its location (grid or desktop).",
            "line": " src/app/components/chrome/chromecontroller.js:3"
        },
        {
            "message": "Missing item type\nCalculates the size of a frame, saves it, and sends a gridSizeChanged\n message",
            "line": " src/app/dashboardView/grid/grid.js:181"
        },
        {
            "message": "Missing item type\nReloads the current dashboard",
            "line": " src/app/dashboardView/grid/grid.js:219"
        },
        {
            "message": "Missing item type\nUpdate a single frame after a change (move or resize) has occurred",
            "line": " src/app/dashboardView/grid/grid.js:256"
        },
        {
            "message": "Missing item type\nUpdate all frames after the user finishes moving or resizing a frame",
            "line": " src/app/dashboardView/grid/grid.js:274"
        },
        {
            "message": "Missing item type\nCalculates the size in pixels for a given frame\nNecessary because the built-in angular-gridster method that calculates a\ngrid tile's size after resizing does not yield the correct results.\n\nNotes:\n hard-coded value of gridster container padding\n accesses $scope.gridOptions",
            "line": " src/app/dashboardView/grid/grid.js:353"
        },
        {
            "message": "Missing item type\nUpdate the widget's pixel size on the grid (this update is local, the\ndata is not persisted to the dashboard api)",
            "line": " src/app/dashboardView/grid/grid.js:393"
        },
        {
            "message": "Missing item type\nProvides a simpler interface to the browser's localStorage",
            "line": " src/app/general/services/localstorage.js:3"
        },
        {
            "message": "Missing item type\nAngular service which provides a local storage interface to the marketplace\napi",
            "line": " src/app/general/services/marketplaceApi.js:172"
        },
        {
            "message": "Missing item type\nAngular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve marketplace data",
            "line": " src/app/general/services/marketplaceApi.js:188"
        },
        {
            "message": "Missing item type\nAngular service which provides a local storage interface to the userSettings api.",
            "line": " src/app/general/services/userSettingsApi.js:48"
        },
        {
            "message": "Missing item type\nAngular service which uses the Inter-Widget Communication (IWC) API to store\nand retrieve user settings.",
            "line": " src/app/general/services/userSettingsApi.js:63"
        }
    ]
}